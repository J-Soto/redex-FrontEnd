{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\redexfront\\\\redexfront\\\\src\\\\views\\\\examples\\\\Simulation.js\";\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n// javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Bar } from \"react-chartjs-2\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactDatetime from \"react-datetime\"; // reactstrap components\n\nimport { Alert, Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, Modal, InputGroupAddon, InputGroupText, InputGroup, Spinner } from \"reactstrap\"; // core components\n\nimport { chartOptions, parseOptions } from \"variables/charts.js\";\nimport Header from \"components/Headers/Header.js\";\nimport APIShipment from \"./../../apis/APIShipment.js\";\nimport APISimulation from \"./../../apis/APISimulation\";\nvar serviceTimeline = new APISimulation(); // Example 2 of Chart inside src/views/Index.js (Total orders - Card)\n\nvar chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [{\n        ticks: {\n          callback: function callback(value) {\n            if (!(value % 10)) {\n              //return '$' + value + 'k'\n              return value;\n            }\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function label(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  }\n};\nvar useStyles = makeStyles({\n  root: {\n    width: 300\n  }\n});\n\nfunction valuetext(value) {\n  return \"\".concat(value, \"\\xB0C\");\n}\n\nvar Simulation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Simulation, _React$Component);\n\n  var _super = _createSuper(Simulation);\n\n  function Simulation(props) {\n    var _this;\n\n    _classCallCheck(this, Simulation);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, event.target.name, event.target.value), _defineProperty(_this$setState, \"messageConfirmation\", []), _this$setState));\n    };\n\n    _this.handleChangeSimulation = function (event, value) {};\n\n    _this.toggleModal = function () {\n      _this.setState({\n        stateModal: !_this.state.stateModal\n      });\n    };\n\n    _this.submitFile = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var fileInput, formData, requestOptions, uploadFileAns, uploadFile, alertMessage, _alertMessage;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //const fileInput = data.querySelector('#packs.generado.20200607') ;\n              _this.setState({\n                loading: true\n              });\n\n              fileInput = document.querySelector(\"#input-fileSelectorPackages\");\n              formData = new FormData();\n              formData.append(\"file\", fileInput.files[0]); //subir archivo\n\n              requestOptions = {\n                method: \"POST\",\n                body: formData,\n                redirect: \"follow\"\n              };\n              console.log(\"procesando1\");\n              _context.next = 8;\n              return fetch(\"http://54.146.196.79:8080/dp1/api/dispatch/upload/zip\", requestOptions);\n\n            case 8:\n              uploadFileAns = _context.sent;\n              _context.next = 11;\n              return uploadFileAns.json();\n\n            case 11:\n              uploadFile = _context.sent;\n              console.log(uploadFile[\"resultado\"]);\n\n              if (uploadFile[\"estado\"].length < 3) {\n                /*let data2 = {\r\n                  labels: [\"Éxitos\", \"Fallos\"],\r\n                  datasets: [\r\n                    {\r\n                      label: \"Procesamiento\",\r\n                      data: [\r\n                        uploadFile[\"resultado\"][\"ok\"],\r\n                        uploadFile[\"resultado\"][\"failed\"],\r\n                      ],\r\n                      maxBarThickness: 10,\r\n                    },\r\n                  ],\r\n                };\r\n                  let info2 = (\r\n                  <div className=\"chart\">\r\n                    <Bar data={data2} options={chartExample2.options} />\r\n                  </div>\r\n                );\r\n                  let infoModal = (\r\n                  <div>\r\n                    <Row>\r\n                      <h4>\r\n                        {\"  \"}Fallos: {uploadFile[\"resultado\"][\"failed\"]}\r\n                      </h4>\r\n                    </Row>\r\n                    <Row>\r\n                      <h4>\r\n                        {\"  \"}Éxitos: {uploadFile[\"resultado\"][\"ok\"]}\r\n                      </h4>\r\n                    </Row>\r\n                  </div>\r\n                );*/\n                alertMessage = /*#__PURE__*/React.createElement(Alert, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 26\n                  }\n                }, \"El archivo se subi\\xF3 de manera correcta\");\n\n                _this.setState({\n                  messageConfirmation: alertMessage,\n                  loading: false,\n                  loaded: true\n                });\n\n                _this.toggleModal();\n              } else {\n                _alertMessage = /*#__PURE__*/React.createElement(Alert, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 9\n                  }\n                }, \"El archivo no se subi\\xF3 de manera correcta\");\n\n                _this.setState({\n                  messageConfirmation: _alertMessage,\n                  loading: false\n                });\n              }\n              /*const resultTimeline = await serviceTimeline.getTimeline(\r\n                \"20200203\",\r\n                \"15:27\"\r\n              );\r\n              let dataChart1 = [],\r\n                labelsChart1 = [];\r\n              if (resultTimeline[\"estado\"].length < 3) {\r\n                resultTimeline[\"resultado\"].map((airport) => {\r\n                  dataChart1.push(airport[\"percentage\"]);\r\n                  labelsChart1.push(airport[\"code\"]);\r\n                });\r\n                this.setState({ dataTimeLine: dataChart1, labelsTimeLine: labelsChart1 });\r\n              } else {\r\n                this.setState({\r\n                  dataTimeLine: [0, 0, 0, 0, 0],\r\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n                });\r\n              }*/\n\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resultTimeline;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return serviceTimeline.getTimeline(\"20200203\", \"15:27\");\n\n            case 2:\n              resultTimeline = _context2.sent;\n              console.log(resultTimeline);\n              /*let dataChart1 = [],\r\n                labelsChart1 = [];\r\n              if (resultTimeline[\"estado\"].length < 3) {\r\n                resultTimeline[\"resultado\"].map((airport) => {\r\n                  dataChart1.push(airport[\"percentage\"]);\r\n                  labelsChart1.push(airport[\"code\"]);\r\n                });\r\n                this.setState({ dataTimeLine: dataChart1, labelsTimeLine: labelsChart1 });\r\n              } else {\r\n                this.setState({\r\n                  dataTimeLine: [0, 0, 0, 0, 0],\r\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n                });\r\n              }*/\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.state = {\n      messageConfirmation: [],\n      fileSelection: [],\n      infoModal: [],\n      stateModal: false,\n      loading: false,\n      loaded: true,\n      queryDate: null,\n      labelsTimeLine: [],\n      dataTimeLine: {}\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.submitFile = _this.submitFile.bind(_assertThisInitialized(_this));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_this));\n    _this.handleChangeSimulation = _this.handleChangeSimulation.bind(_assertThisInitialized(_this));\n\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n\n    return _this;\n  }\n\n  _createClass(Simulation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var mixedChart = {\n        labels: this.state.labelsTimeLine,\n        datasets: [{\n          label: \"Bar Dataset\",\n          data: this.state.dataTimeLine\n        }]\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"bg-secondary shadow\",\n        style: {\n          width: \"80rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"bg-white border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"10\",\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }, \"Simulaci\\xF3n\")))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-lg-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"input-fileSelectorPackages\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 27\n        }\n      }, \"Registro de paquetes\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"file\",\n        name: \"fileSelection\",\n        placeholder: \"Seleccionar archivo\",\n        id: \"input-fileSelectorPackages\",\n        onChange: function onChange(ev) {\n          return _this2.handleChange(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, this.state.messageConfirmation))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.submitFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      }, \"Subir\"))), this.state.loading && /*#__PURE__*/React.createElement(Spinner, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 40\n        }\n      }), this.state.loaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 23\n        }\n      }, \"Resultado de la simulaci\\xF3n\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }\n      }, this.state.infoModal)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }), this.state.loaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: mixedChart,\n        options: chartExample2.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 23\n        }\n      }, \"Fecha\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: true,\n        renderDay: function renderDay(props, currentDate, selectedDate) {\n          var classes = props.className;\n\n          if (_this2.state.startDate && _this2.state.endDate && _this2.state.startDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" start-date\";\n          } else if (_this2.state.startDate && _this2.state.endDate && new Date(_this2.state.startDate._d + \"\") < new Date(currentDate._d + \"\") && new Date(_this2.state.endDate._d + \"\") > new Date(currentDate._d + \"\")) {\n            classes += \" middle-date\";\n          } else if (_this2.state.endDate && _this2.state.endDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" end-date\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, props, {\n            className: classes,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 31\n            }\n          }), currentDate.date());\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            queryDate: e\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      })))))))));\n    }\n  }]);\n\n  return Simulation;\n}(React.Component);\n\nexport default Simulation;","map":{"version":3,"sources":["C:/redexfront/redexfront/src/views/examples/Simulation.js"],"names":["React","Chart","Bar","Slider","makeStyles","Typography","ReactDatetime","Alert","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","Modal","InputGroupAddon","InputGroupText","InputGroup","Spinner","chartOptions","parseOptions","Header","APIShipment","APISimulation","serviceTimeline","chartExample2","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","useStyles","root","width","valuetext","Simulation","props","handleChange","event","setState","target","name","handleChangeSimulation","toggleModal","stateModal","state","submitFile","loading","fileInput","document","querySelector","formData","FormData","append","files","requestOptions","method","body","redirect","console","log","fetch","uploadFileAns","json","uploadFile","alertMessage","messageConfirmation","loaded","componentWillMount","getTimeline","resultTimeline","fileSelection","infoModal","queryDate","labelsTimeLine","dataTimeLine","bind","window","mixedChart","labels","ev","placeholder","currentDate","selectedDate","classes","className","startDate","endDate","_d","Date","date","e","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDatetime from \"react-datetime\";\r\n// reactstrap components\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// core components\r\n\r\nimport { chartOptions, parseOptions } from \"variables/charts.js\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport APIShipment from \"./../../apis/APIShipment.js\";\r\nimport APISimulation from \"./../../apis/APISimulation\";\r\nconst serviceTimeline = new APISimulation();\r\n\r\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet chartExample2 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function (value) {\r\n              if (!(value % 10)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n              }\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n          content += yLabel;\r\n          return content;\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nclass Simulation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messageConfirmation: [],\r\n      fileSelection: [],\r\n      infoModal: [],\r\n      stateModal: false,\r\n      loading: false,\r\n      loaded: true,\r\n      queryDate: null,\r\n      labelsTimeLine: [],\r\n      dataTimeLine: {},\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitFile = this.submitFile.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleChangeSimulation = this.handleChangeSimulation.bind(this);\r\n    if (window.Chart) {\r\n      parseOptions(Chart, chartOptions());\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n      messageConfirmation: [],\r\n    });\r\n  };\r\n  handleChangeSimulation = (event, value) => {};\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      stateModal: !this.state.stateModal,\r\n    });\r\n  };\r\n\r\n  submitFile = async () => {\r\n    //const fileInput = data.querySelector('#packs.generado.20200607') ;\r\n    this.setState({ loading: true });\r\n    const fileInput = document.querySelector(\"#input-fileSelectorPackages\");\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", fileInput.files[0]);\r\n\r\n    //subir archivo\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formData,\r\n      redirect: \"follow\",\r\n    };\r\n    console.log(\"procesando1\");\r\n    const uploadFileAns = await fetch(\r\n      \"http://54.146.196.79:8080/dp1/api/dispatch/upload/zip\",\r\n      requestOptions\r\n    );\r\n\r\n    const uploadFile = await uploadFileAns.json();\r\n    console.log(uploadFile[\"resultado\"]);\r\n\r\n    if (uploadFile[\"estado\"].length < 3) {\r\n      /*let data2 = {\r\n        labels: [\"Éxitos\", \"Fallos\"],\r\n        datasets: [\r\n          {\r\n            label: \"Procesamiento\",\r\n            data: [\r\n              uploadFile[\"resultado\"][\"ok\"],\r\n              uploadFile[\"resultado\"][\"failed\"],\r\n            ],\r\n            maxBarThickness: 10,\r\n          },\r\n        ],\r\n      };\r\n\r\n      let info2 = (\r\n        <div className=\"chart\">\r\n          <Bar data={data2} options={chartExample2.options} />\r\n        </div>\r\n      );\r\n\r\n      let infoModal = (\r\n        <div>\r\n          <Row>\r\n            <h4>\r\n              {\"  \"}Fallos: {uploadFile[\"resultado\"][\"failed\"]}\r\n            </h4>\r\n          </Row>\r\n          <Row>\r\n            <h4>\r\n              {\"  \"}Éxitos: {uploadFile[\"resultado\"][\"ok\"]}\r\n            </h4>\r\n          </Row>\r\n        </div>\r\n      );*/\r\n\r\n      let alertMessage = <Alert>El archivo se subió de manera correcta</Alert>;\r\n      this.setState({\r\n        messageConfirmation: alertMessage,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n\r\n      this.toggleModal();\r\n    } else {\r\n      let alertMessage = (\r\n        <Alert>El archivo no se subió de manera correcta</Alert>\r\n      );\r\n\r\n      this.setState({\r\n        messageConfirmation: alertMessage,\r\n        loading: false,\r\n      });\r\n    }\r\n    /*const resultTimeline = await serviceTimeline.getTimeline(\r\n      \"20200203\",\r\n      \"15:27\"\r\n    );\r\n    let dataChart1 = [],\r\n      labelsChart1 = [];\r\n    if (resultTimeline[\"estado\"].length < 3) {\r\n      resultTimeline[\"resultado\"].map((airport) => {\r\n        dataChart1.push(airport[\"percentage\"]);\r\n        labelsChart1.push(airport[\"code\"]);\r\n      });\r\n      this.setState({ dataTimeLine: dataChart1, labelsTimeLine: labelsChart1 });\r\n    } else {\r\n      this.setState({\r\n        dataTimeLine: [0, 0, 0, 0, 0],\r\n        labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n      });\r\n    }*/\r\n  };\r\n  componentWillMount = async () => {\r\n    const resultTimeline = await serviceTimeline.getTimeline(\r\n      \"20200203\",\r\n      \"15:27\"\r\n    );\r\n    console.log(resultTimeline);\r\n    /*let dataChart1 = [],\r\n      labelsChart1 = [];\r\n    if (resultTimeline[\"estado\"].length < 3) {\r\n      resultTimeline[\"resultado\"].map((airport) => {\r\n        dataChart1.push(airport[\"percentage\"]);\r\n        labelsChart1.push(airport[\"code\"]);\r\n      });\r\n      this.setState({ dataTimeLine: dataChart1, labelsTimeLine: labelsChart1 });\r\n    } else {\r\n      this.setState({\r\n        dataTimeLine: [0, 0, 0, 0, 0],\r\n        labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n      });\r\n    }*/\r\n  };\r\n\r\n  render() {\r\n    let mixedChart = {\r\n      labels: this.state.labelsTimeLine,\r\n      datasets: [\r\n        {\r\n          label: \"Bar Dataset\",\r\n          data: this.state.dataTimeLine,\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          {/* Form */}\r\n          <Row>\r\n            <Card className=\"bg-secondary shadow\" style={{ width: \"80rem\" }}>\r\n              <CardHeader className=\"bg-white border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <Col xs=\"10\" className=\"col-sm\">\r\n                    <h3 className=\"mb-0\">Simulación</h3>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <div className=\"pl-lg-4\">\r\n                    <Row>\r\n                      <Col lg=\"6\">\r\n                        <FormGroup>\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"input-fileSelectorPackages\"\r\n                          >\r\n                            Registro de paquetes\r\n                          </label>\r\n                          <div>\r\n                            <Input\r\n                              type=\"file\"\r\n                              name=\"fileSelection\"\r\n                              placeholder=\"Seleccionar archivo\"\r\n                              id=\"input-fileSelectorPackages\"\r\n                              onChange={(ev) => this.handleChange(ev)}\r\n                            />\r\n                          </div>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col lg=\"6\"></Col>\r\n                    </Row>\r\n                    <Row>{this.state.messageConfirmation}</Row>\r\n                  </div>\r\n                </Form>\r\n\r\n                <Row>\r\n                  <Col className=\"text-right\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      type=\"button\"\r\n                      onClick={this.submitFile}\r\n                    >\r\n                      Subir\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                {this.state.loading && <Spinner color=\"primary\" />}\r\n                {this.state.loaded && (\r\n                  <div>\r\n                    <div className=\"modal-header\">\r\n                      <h2>Resultado de la simulación</h2>\r\n                    </div>\r\n                    <div className=\"modal-body\">{this.state.infoModal}</div>\r\n                  </div>\r\n                )}\r\n                <br />\r\n                {this.state.loaded && (\r\n                  <div>\r\n                    <Col lg=\"9\">\r\n                      <div className=\"chart\">\r\n                        <Bar\r\n                          data={mixedChart}\r\n                          options={chartExample2.options}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <FormGroup>\r\n                      <label className=\"form-control-label\">Fecha</label>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-calendar-grid-58\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <ReactDatetime\r\n                          inputProps={{\r\n                            placeholder: \"Seleccionar fecha\",\r\n                          }}\r\n                          timeFormat={true}\r\n                          renderDay={(props, currentDate, selectedDate) => {\r\n                            let classes = props.className;\r\n                            if (\r\n                              this.state.startDate &&\r\n                              this.state.endDate &&\r\n                              this.state.startDate._d + \"\" ===\r\n                                currentDate._d + \"\"\r\n                            ) {\r\n                              classes += \" start-date\";\r\n                            } else if (\r\n                              this.state.startDate &&\r\n                              this.state.endDate &&\r\n                              new Date(this.state.startDate._d + \"\") <\r\n                                new Date(currentDate._d + \"\") &&\r\n                              new Date(this.state.endDate._d + \"\") >\r\n                                new Date(currentDate._d + \"\")\r\n                            ) {\r\n                              classes += \" middle-date\";\r\n                            } else if (\r\n                              this.state.endDate &&\r\n                              this.state.endDate._d + \"\" === currentDate._d + \"\"\r\n                            ) {\r\n                              classes += \" end-date\";\r\n                            }\r\n                            return (\r\n                              <td {...props} className={classes}>\r\n                                {currentDate.date()}\r\n                              </td>\r\n                            );\r\n                          }}\r\n                          onChange={(e) => this.setState({ queryDate: e })}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    {/*<Typography id=\"discrete-slider\" gutterBottom>\r\n                      Fecha\r\n                    </Typography>\r\n                    <Slider\r\n                      style={{ width: 80 + \"%\" }}\r\n                      defaultValue={0}\r\n                      getAriaValueText={valuetext}\r\n                      aria-labelledby=\"discrete-slider\"\r\n                      valueLabelDisplay=\"auto\"\r\n                      step={10}\r\n                      marks\r\n                      min={0}\r\n                      max={50}\r\n                      onChange={this.handleChangeSimulation}\r\n                    />\r\n                    <Typography id=\"discrete-slider\" gutterBottom>\r\n                      Hora\r\n                    </Typography>\r\n                    <Slider\r\n                      style={{ width: 80 + \"%\" }}\r\n                      defaultValue={0}\r\n                      getAriaValueText={valuetext}\r\n                      aria-labelledby=\"discrete-slider\"\r\n                      valueLabelDisplay=\"auto\"\r\n                      step={10}\r\n                      marks\r\n                      min={0}\r\n                      max={50}\r\n                      onChange={this.handleChangeSimulation}\r\n                />*/}\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Simulation;\r\n"]},"metadata":{},"sourceType":"module"}