{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\src\\\\views\\\\examples\\\\Monitoring.js\";\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n// javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactDatetime from \"react-datetime\";\nimport APISimulation from \"./../../apis/APISimulation\"; // reactstrap components\n\nimport { Alert, Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, ListGroup, ListGroupItem, InputGroupAddon, InputGroupText, InputGroup } from \"reactstrap\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample3 } from \"variables/charts.js\";\nimport Header from \"components/Headers/Header.js\";\nimport APIIncident from \"../../apis/APIIncident.js\";\nvar serviceIncident = new APIIncident();\nvar serviceTimeline = new APISimulation();\nvar chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [{\n        ticks: {\n          callback: function callback(value) {\n            if (!(value % 10)) {\n              //return '$' + value + 'k'\n              return value;\n            }\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function label(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  }\n};\nvar useStyles = makeStyles({\n  root: {\n    width: 300\n  }\n});\n\nfunction valuetext(value) {\n  return \"\".concat(value, \"\\xB0C\");\n}\n\nvar ShippingMonitoring = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShippingMonitoring, _React$Component);\n\n  var _super = _createSuper(ShippingMonitoring);\n\n  function ShippingMonitoring(props) {\n    var _this;\n\n    _classCallCheck(this, ShippingMonitoring);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.queryTimelineMoment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var year, month, date, hours, min, dateSend, hourSend, resultTimeline, dataChart1, labelsChart1;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.queryDate != null)) {\n                _context.next = 19;\n                break;\n              }\n\n              year = _this.state.queryDate.getFullYear();\n              month = _this.state.queryDate.getMonth();\n\n              if (month < 10) {\n                month = \"0\" + (month + 1);\n              } //console.log(month);\n\n\n              console.log(_this.state.queryDate.getDate());\n              date = _this.state.queryDate.getDate();\n\n              if (date < 10) {\n                date = \"0\" + date;\n              } //console.log(this.state.queryDate.getHours());\n\n\n              hours = _this.state.queryDate.getHours();\n\n              if (hours < 10) {\n                hours = \"0\" + hours;\n              } //console.log(hours);\n              //console.log(this.state.queryDate.getMinutes());\n\n\n              min = _this.state.queryDate.getMinutes();\n\n              if (min < 10) {\n                min = \"0\" + min;\n              }\n\n              dateSend = year.toString() + month.toString() + date.toString();\n              hourSend = hours.toString() + \":\" + min.toString(); //console.log(typeof dateSend);\n\n              _context.next = 15;\n              return serviceTimeline.getTimeline(dateSend, hourSend);\n\n            case 15:\n              resultTimeline = _context.sent;\n              //console.log(resultTimeline[\"resultado\"]);\n              dataChart1 = [], labelsChart1 = [];\n\n              if (resultTimeline[\"estado\"].length < 3) {\n                resultTimeline[\"resultado\"].map(function (airport) {\n                  dataChart1.push(airport[\"percentage\"]);\n                  labelsChart1.push(airport[\"code\"]);\n                }); //console.log(dataChart1);\n                //console.log(labelsChart1);\n\n                _this.setState({\n                  dataTimeLine: dataChart1,\n                  labelsTimeLine: labelsChart1\n                });\n              } else {\n                _this.setState({\n                  dataTimeLine: [0, 0, 0, 0, 0],\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"]\n                });\n              }\n\n              _this.setState({\n                queryTimeline: true\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resultIncident, dataChart1, labelsChart1, legendChart1, dataChart2, labelsChart2, legendChart2;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return serviceIncident.getDashboards();\n\n            case 2:\n              resultIncident = _context2.sent;\n              dataChart1 = [], labelsChart1 = [], legendChart1 = [], dataChart2 = [], labelsChart2 = [], legendChart2 = [];\n\n              if (resultIncident[\"estado\"].length < 3) {\n                resultIncident[\"resultado\"][\"byairports\"].map(function (airport) {\n                  dataChart1.push(airport[\"count\"]);\n                  labelsChart1.push(airport[\"code\"]);\n                  legendChart1.push(airport[\"name\"]);\n                });\n                resultIncident[\"resultado\"][\"byflightplans\"].map(function (flight) {\n                  dataChart2.push(flight[\"count\"]);\n                  labelsChart2.push(flight[\"idFlight\"]);\n                  legendChart2.push([flight[\"codOrigin\"], flight[\"codDestiny\"]]);\n                });\n                console.log(dataChart1, labelsChart1, legendChart1);\n                console.log(dataChart2, labelsChart2, legendChart2);\n\n                _this.setState({\n                  dataChart1: dataChart1,\n                  labelsChart1: labelsChart1,\n                  legendChart1: legendChart1,\n                  dataChart2: dataChart2,\n                  labelsChart2: labelsChart2,\n                  legendChart2: legendChart2,\n                  dataChart3: resultIncident[\"resultado\"][\"summaryCase\"]\n                });\n              } else {\n                //si hay error porque no hay data\n                _this.setState({\n                  dataChart1: [0, 0, 0, 0, 0],\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\n                  legendChart1: [\"N1\", \"N2\", \"N3\", \"N4\", \"N5\"],\n                  dataChart2: [0, 0, 0, 0, 0],\n                  labelsChart2: [\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"],\n                  legendChart2: [[\"O1\", \"D1\"], [\"O2\", \"D2\"], [\"O3\", \"D3\"], [\"O4\", \"D4\"], [\"O5\", \"D5\"]],\n                  dataChart3: {\n                    ok: 0,\n                    fails: 0\n                  }\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.state = {\n      dataChart1: [],\n      labelsChart1: [],\n      legendChart1: [],\n      dataChart2: [],\n      labelsChart2: [],\n      legendChart2: [],\n      dataChart3: {},\n      queryDate: null,\n      labelsTimeLine: [],\n      dataTimeLine: [],\n      maxTimeLine: [],\n      queryTimeline: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n\n    return _this;\n  }\n\n  _createClass(ShippingMonitoring, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      for (var i = 0; i < this.state.dataTimeLine.length; i++) {\n        this.state.maxTimeLine.push(100);\n      }\n\n      var mixedChart = {\n        labels: this.state.labelsTimeLine,\n        datasets: [{\n          label: \"% Ocupado: \",\n          data: this.state.dataTimeLine\n        }, {\n          label: \"% Máximo: \",\n          data: this.state.maxTimeLine,\n          type: \"line\"\n        }]\n      };\n      var data1 = {\n        labels: this.state.labelsChart1,\n        datasets: [{\n          label: \"Aeropuertos más ocupados\",\n          data: this.state.dataChart1,\n          maxBarThickness: 10\n        }]\n      };\n      var data2 = {\n        labels: this.state.labelsChart2,\n        datasets: [{\n          label: \"Vuelos más ocupados\",\n          data: this.state.dataChart2,\n          maxBarThickness: 10\n        }]\n      };\n      var data3 = {\n        labels: [\"Éxitos\", \"Fallos\"],\n        datasets: [{\n          label: \"Procesamiento\",\n          data: [this.state.dataChart3[\"ok\"], this.state.dataChart3[\"fails\"]],\n          maxBarThickness: 10\n        }]\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"bg-secondary shadow\",\n        style: {\n          width: \"80rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"bg-white border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"10\",\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, \"Simulaci\\xF3n\")))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-lg-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }, this.state.queryTimeline && /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: mixedChart,\n        options: chartExample2.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        style: {\n          width: \"30%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }, \"Fecha\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: true,\n        onChange: function onChange(e) {\n          _this2.setState({\n            queryDate: new Date(e)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        outline: true,\n        type: \"button\",\n        onClick: this.queryTimelineMoment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-zoom-split-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 33\n        }\n      }))))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 23\n        }\n      }, \"TOP 5 Almacenes ocupados\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data1,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }\n      }, this.state.legendChart1.map(function (airport) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 36\n          }\n        }, airport);\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 23\n        }\n      }, \"TOP 5 Vuelos ocupados\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data2,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      }, this.state.legendChart2.map(function (flight) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 31\n          }\n        }, flight[0], \"-\", flight[1]);\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 23\n        }\n      }, \"Resumen\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Doughnut, {\n        data: data3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 27\n        }\n      }, \"Casos de \\xE9xito\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 27\n        }\n      }, \"Casos de fallo\")))))))))));\n    }\n  }]);\n\n  return ShippingMonitoring;\n}(React.Component);\n\nexport default ShippingMonitoring;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Ciclo9/DP1/Front-end/redexfront/redexfront/src/views/examples/Monitoring.js"],"names":["React","Chart","Bar","Doughnut","Slider","makeStyles","Typography","ReactDatetime","APISimulation","Alert","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","ListGroup","ListGroupItem","InputGroupAddon","InputGroupText","InputGroup","chartOptions","parseOptions","chartExample1","chartExample3","Header","APIIncident","serviceIncident","serviceTimeline","chartExample2","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","useStyles","root","width","valuetext","ShippingMonitoring","props","handleChange","event","setState","target","name","queryTimelineMoment","state","queryDate","year","getFullYear","month","getMonth","console","log","getDate","date","hours","getHours","min","getMinutes","dateSend","toString","hourSend","getTimeline","resultTimeline","dataChart1","labelsChart1","map","airport","push","dataTimeLine","labelsTimeLine","queryTimeline","componentWillMount","getDashboards","resultIncident","legendChart1","dataChart2","labelsChart2","legendChart2","flight","dataChart3","ok","fails","maxTimeLine","bind","window","i","mixedChart","labels","type","data1","maxBarThickness","data2","data3","placeholder","e","Date","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDatetime from \"react-datetime\";\r\nimport APISimulation from \"./../../apis/APISimulation\";\r\n// reactstrap components\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\n// core components\r\n\r\nimport {\r\n  chartOptions,\r\n  parseOptions,\r\n  chartExample1,\r\n  chartExample3,\r\n} from \"variables/charts.js\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport APIIncident from \"../../apis/APIIncident.js\";\r\nconst serviceIncident = new APIIncident();\r\nconst serviceTimeline = new APISimulation();\r\n\r\nlet chartExample2 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function (value) {\r\n              if (!(value % 10)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n              }\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n          content += yLabel;\r\n          return content;\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nclass ShippingMonitoring extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataChart1: [],\r\n      labelsChart1: [],\r\n      legendChart1: [],\r\n      dataChart2: [],\r\n      labelsChart2: [],\r\n      legendChart2: [],\r\n      dataChart3: {},\r\n      queryDate: null,\r\n      labelsTimeLine: [],\r\n      dataTimeLine: [],\r\n      maxTimeLine: [],\r\n      queryTimeline: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    if (window.Chart) {\r\n      parseOptions(Chart, chartOptions());\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  queryTimelineMoment = async () => {\r\n    if (this.state.queryDate != null) {\r\n      let year = this.state.queryDate.getFullYear();\r\n      let month = this.state.queryDate.getMonth();\r\n      if (month < 10) {\r\n        month = \"0\" + (month + 1);\r\n      }\r\n      //console.log(month);\r\n\r\n      console.log(this.state.queryDate.getDate());\r\n      let date = this.state.queryDate.getDate();\r\n      if (date < 10) {\r\n        date = \"0\" + date;\r\n      }\r\n\r\n      //console.log(this.state.queryDate.getHours());\r\n      let hours = this.state.queryDate.getHours();\r\n      if (hours < 10) {\r\n        hours = \"0\" + hours;\r\n      }\r\n      //console.log(hours);\r\n\r\n      //console.log(this.state.queryDate.getMinutes());\r\n      let min = this.state.queryDate.getMinutes();\r\n      if (min < 10) {\r\n        min = \"0\" + min;\r\n      }\r\n      let dateSend = year.toString() + month.toString() + date.toString();\r\n      let hourSend = hours.toString() + \":\" + min.toString();\r\n      //console.log(typeof dateSend);\r\n\r\n      const resultTimeline = await serviceTimeline.getTimeline(\r\n        dateSend,\r\n        hourSend\r\n      );\r\n      //console.log(resultTimeline[\"resultado\"]);\r\n      let dataChart1 = [],\r\n        labelsChart1 = [];\r\n      if (resultTimeline[\"estado\"].length < 3) {\r\n        resultTimeline[\"resultado\"].map((airport) => {\r\n          dataChart1.push(airport[\"percentage\"]);\r\n          labelsChart1.push(airport[\"code\"]);\r\n        });\r\n        //console.log(dataChart1);\r\n        //console.log(labelsChart1);\r\n        this.setState({\r\n          dataTimeLine: dataChart1,\r\n          labelsTimeLine: labelsChart1,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          dataTimeLine: [0, 0, 0, 0, 0],\r\n          labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n        });\r\n      }\r\n      this.setState({ queryTimeline: true });\r\n    }\r\n  };\r\n\r\n  componentWillMount = async () => {\r\n    const resultIncident = await serviceIncident.getDashboards();\r\n    let dataChart1 = [],\r\n      labelsChart1 = [],\r\n      legendChart1 = [],\r\n      dataChart2 = [],\r\n      labelsChart2 = [],\r\n      legendChart2 = [];\r\n    if (resultIncident[\"estado\"].length < 3) {\r\n      resultIncident[\"resultado\"][\"byairports\"].map((airport) => {\r\n        dataChart1.push(airport[\"count\"]);\r\n        labelsChart1.push(airport[\"code\"]);\r\n        legendChart1.push(airport[\"name\"]);\r\n      });\r\n      resultIncident[\"resultado\"][\"byflightplans\"].map((flight) => {\r\n        dataChart2.push(flight[\"count\"]);\r\n        labelsChart2.push(flight[\"idFlight\"]);\r\n        legendChart2.push([flight[\"codOrigin\"], flight[\"codDestiny\"]]);\r\n      });\r\n      console.log(dataChart1, labelsChart1, legendChart1);\r\n      console.log(dataChart2, labelsChart2, legendChart2);\r\n      this.setState({\r\n        dataChart1: dataChart1,\r\n        labelsChart1: labelsChart1,\r\n        legendChart1: legendChart1,\r\n        dataChart2: dataChart2,\r\n        labelsChart2: labelsChart2,\r\n        legendChart2: legendChart2,\r\n        dataChart3: resultIncident[\"resultado\"][\"summaryCase\"],\r\n      });\r\n    } else {\r\n      //si hay error porque no hay data\r\n      this.setState({\r\n        dataChart1: [0, 0, 0, 0, 0],\r\n        labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n        legendChart1: [\"N1\", \"N2\", \"N3\", \"N4\", \"N5\"],\r\n        dataChart2: [0, 0, 0, 0, 0],\r\n        labelsChart2: [\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"],\r\n        legendChart2: [\r\n          [\"O1\", \"D1\"],\r\n          [\"O2\", \"D2\"],\r\n          [\"O3\", \"D3\"],\r\n          [\"O4\", \"D4\"],\r\n          [\"O5\", \"D5\"],\r\n        ],\r\n        dataChart3: { ok: 0, fails: 0 },\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    for (let i = 0; i < this.state.dataTimeLine.length; i++) {\r\n      this.state.maxTimeLine.push(100);\r\n    }\r\n    let mixedChart = {\r\n      labels: this.state.labelsTimeLine,\r\n      datasets: [\r\n        {\r\n          label: \"% Ocupado: \",\r\n          data: this.state.dataTimeLine,\r\n        },\r\n        {\r\n          label: \"% Máximo: \",\r\n          data: this.state.maxTimeLine,\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    let data1 = {\r\n      labels: this.state.labelsChart1,\r\n      datasets: [\r\n        {\r\n          label: \"Aeropuertos más ocupados\",\r\n          data: this.state.dataChart1,\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n    let data2 = {\r\n      labels: this.state.labelsChart2,\r\n      datasets: [\r\n        {\r\n          label: \"Vuelos más ocupados\",\r\n          data: this.state.dataChart2,\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n    let data3 = {\r\n      labels: [\"Éxitos\", \"Fallos\"],\r\n      datasets: [\r\n        {\r\n          label: \"Procesamiento\",\r\n          data: [this.state.dataChart3[\"ok\"], this.state.dataChart3[\"fails\"]],\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          {/* Form */}\r\n          <Row>\r\n            <Card className=\"bg-secondary shadow\" style={{ width: \"80rem\" }}>\r\n              <CardHeader className=\"bg-white border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <Col xs=\"10\" className=\"col-sm\">\r\n                    <h3 className=\"mb-0\">Simulación</h3>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <div className=\"pl-lg-4\">\r\n                    <Row>\r\n                      {this.state.queryTimeline && (\r\n                        <Col lg=\"9\">\r\n                          <div className=\"chart\">\r\n                            <Bar\r\n                              data={mixedChart}\r\n                              options={chartExample2.options}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                    </Row>\r\n                    <Row>\r\n                      <FormGroup style={{ width: \"30%\" }}>\r\n                        <label className=\"form-control-label\">Fecha</label>\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-calendar-grid-58\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <ReactDatetime\r\n                            inputProps={{\r\n                              placeholder: \"Seleccionar fecha\",\r\n                            }}\r\n                            timeFormat={true}\r\n                            onChange={(e) => {\r\n                              this.setState({ queryDate: new Date(e) });\r\n                            }}\r\n                          />\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <Button\r\n                              className=\"btn-icon btn-2\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              type=\"button\"\r\n                              onClick={this.queryTimelineMoment}\r\n                            >\r\n                              <span className=\"btn-inner--icon\">\r\n                                <i className=\"ni ni-zoom-split-in\" />\r\n                              </span>\r\n                            </Button>\r\n                          </InputGroupAddon>\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>TOP 5 Almacenes ocupados</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Bar data={data1} options={chartExample3.options} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          {this.state.legendChart1.map((airport) => {\r\n                            return <ListGroupItem>{airport}</ListGroupItem>;\r\n                          })}\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>TOP 5 Vuelos ocupados</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Bar data={data2} options={chartExample3.options} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          {this.state.legendChart2.map((flight) => {\r\n                            return (\r\n                              <ListGroupItem>\r\n                                {flight[0]}-{flight[1]}\r\n                              </ListGroupItem>\r\n                            );\r\n                          })}\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>Resumen</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Doughnut data={data3} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          <ListGroupItem>Casos de éxito</ListGroupItem>\r\n                          <ListGroupItem>Casos de fallo</ListGroupItem>\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ShippingMonitoring;\r\n"]},"metadata":{},"sourceType":"module"}