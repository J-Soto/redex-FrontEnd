{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar fetch = require(\"node-fetch\");\n\nvar APIHandler = /*#__PURE__*/function () {\n  function APIHandler() {\n    _classCallCheck(this, APIHandler);\n  }\n\n  _createClass(APIHandler, [{\n    key: \"postRequest\",\n    value: function () {\n      var _postRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, data) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(data);\n                _context.next = 3;\n                return fetch(url, {\n                  method: \"POST\",\n                  body: JSON.stringify(data),\n                  mode: \"no-cors\",\n                  headers: new fetch.Headers({\n                    \"Content-Type\": \"application/json\"\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postRequest(_x, _x2) {\n        return _postRequest.apply(this, arguments);\n      }\n\n      return postRequest;\n    }()\n  }, {\n    key: \"postRequest2\",\n    value: function () {\n      var _postRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, data) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(data);\n                _context2.next = 3;\n                return fetch(url, {\n                  method: \"POST\",\n                  //body: JSON.stringify(data),\n                  mode: \"no-cors\",\n                  headers: new fetch.Headers({\n                    \"Content-Type\": \"multipart/form-data\"\n                  })\n                });\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.json();\n\n              case 6:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postRequest2(_x3, _x4) {\n        return _postRequest2.apply(this, arguments);\n      }\n\n      return postRequest2;\n    }()\n  }, {\n    key: \"getRequest\",\n    value: function () {\n      var _getRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(url, {\n                  method: \"GET\",\n                  mode: \"no-cors\"\n                });\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getRequest(_x5) {\n        return _getRequest.apply(this, arguments);\n      }\n\n      return getRequest;\n    }()\n  }]);\n\n  return APIHandler;\n}();\n\nexport default APIHandler;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Ciclo9/DP1/Front-end/redexfront/redexfront/src/apis/APIHandler.js"],"names":["fetch","require","APIHandler","url","data","console","log","method","body","JSON","stringify","mode","headers","Headers","response","json"],"mappings":";;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;IAEMC,U;;;;;;;;mGACcC,G,EAAKC,I;;;;;;AACrBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;uBACuBJ,KAAK,CAACG,GAAD,EAAM;AAChCI,kBAAAA,MAAM,EAAE,MADwB;AAEhCC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAF0B;AAGhCO,kBAAAA,IAAI,EAAE,SAH0B;AAIhCC,kBAAAA,OAAO,EAAE,IAAIZ,KAAK,CAACa,OAAV,CAAkB;AACzB,oCAAgB;AADS,mBAAlB;AAJuB,iBAAN,C;;;AAAtBC,gBAAAA,Q;;uBAQOA,QAAQ,CAACC,IAAT,E;;;;;;;;;;;;;;;;;;;;;;qGAGIZ,G,EAAKC,I;;;;;;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;uBACuBJ,KAAK,CAACG,GAAD,EAAM;AAChCI,kBAAAA,MAAM,EAAE,MADwB;AAEhC;AACAI,kBAAAA,IAAI,EAAE,SAH0B;AAIhCC,kBAAAA,OAAO,EAAE,IAAIZ,KAAK,CAACa,OAAV,CAAkB;AACzB,oCAAgB;AADS,mBAAlB;AAJuB,iBAAN,C;;;AAAtBC,gBAAAA,Q;;uBAQOA,QAAQ,CAACC,IAAT,E;;;;;;;;;;;;;;;;;;;;;;mGAGEZ,G;;;;;;;uBACQH,KAAK,CAACG,GAAD,EAAM;AAChCI,kBAAAA,MAAM,EAAE,KADwB;AAEhCI,kBAAAA,IAAI,EAAE;AAF0B,iBAAN,C;;;AAAtBG,gBAAAA,Q;;uBAIOA,QAAQ,CAACC,IAAT,E;;;;;;;;;;;;;;;;;;;;;;;;AAIjB,eAAeb,UAAf","sourcesContent":["const fetch = require(\"node-fetch\");\r\n\r\nclass APIHandler {\r\n  async postRequest(url, data) {\r\n    console.log(data);\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      mode: \"no-cors\",\r\n      headers: new fetch.Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    });\r\n    return await response.json();\r\n  }\r\n\r\n  async postRequest2(url, data) {\r\n    console.log(data);\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      //body: JSON.stringify(data),\r\n      mode: \"no-cors\",\r\n      headers: new fetch.Headers({\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      }),\r\n    });\r\n    return await response.json();\r\n  }\r\n\r\n  async getRequest(url) {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      mode: \"no-cors\",\r\n    });\r\n    return await response.json();\r\n  }\r\n}\r\n\r\nexport default APIHandler;\r\n"]},"metadata":{},"sourceType":"module"}