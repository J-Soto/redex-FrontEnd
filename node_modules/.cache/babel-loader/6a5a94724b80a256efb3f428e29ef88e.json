{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\redexfront\\\\redexfront\\\\src\\\\views\\\\examples\\\\Monitoring.js\";\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n// javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactDatetime from \"react-datetime\";\nvar serviceTimeline = new APISimulation(); // reactstrap components\n\nimport { Alert, Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, ListGroup, ListGroupItem } from \"reactstrap\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample3 } from \"variables/charts.js\";\nimport Header from \"components/Headers/Header.js\";\nimport APIIncident from \"../../apis/APIIncident.js\";\nvar serviceIncident = new APIIncident();\n\nvar ShippingMonitoring = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShippingMonitoring, _React$Component);\n\n  var _super = _createSuper(ShippingMonitoring);\n\n  function ShippingMonitoring(props) {\n    var _this;\n\n    _classCallCheck(this, ShippingMonitoring);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resultIncident, dataChart1, labelsChart1, legendChart1, dataChart2, labelsChart2, legendChart2;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return serviceIncident.getDashboards();\n\n            case 2:\n              resultIncident = _context.sent;\n              dataChart1 = [], labelsChart1 = [], legendChart1 = [], dataChart2 = [], labelsChart2 = [], legendChart2 = [];\n\n              if (resultIncident[\"estado\"].length < 3) {\n                resultIncident[\"resultado\"][\"byairports\"].map(function (airport) {\n                  dataChart1.push(airport[\"count\"]);\n                  labelsChart1.push(airport[\"code\"]);\n                  legendChart1.push(airport[\"name\"]);\n                });\n                resultIncident[\"resultado\"][\"byflightplans\"].map(function (flight) {\n                  dataChart2.push(flight[\"count\"]);\n                  labelsChart2.push(flight[\"idFlight\"]);\n                  legendChart2.push([flight[\"codOrigin\"], flight[\"codDestiny\"]]);\n                });\n                console.log(dataChart1, labelsChart1, legendChart1);\n                console.log(dataChart2, labelsChart2, legendChart2);\n\n                _this.setState({\n                  dataChart1: dataChart1,\n                  labelsChart1: labelsChart1,\n                  legendChart1: legendChart1,\n                  dataChart2: dataChart2,\n                  labelsChart2: labelsChart2,\n                  legendChart2: legendChart2,\n                  dataChart3: resultIncident[\"resultado\"][\"summaryCase\"]\n                });\n              } else {\n                //si hay error porque no hay data\n                _this.setState({\n                  dataChart1: [0, 0, 0, 0, 0],\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\n                  legendChart1: [\"N1\", \"N2\", \"N3\", \"N4\", \"N5\"],\n                  dataChart2: [0, 0, 0, 0, 0],\n                  labelsChart2: [\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"],\n                  legendChart2: [[\"O1\", \"D1\"], [\"O2\", \"D2\"], [\"O3\", \"D3\"], [\"O4\", \"D4\"], [\"O5\", \"D5\"]],\n                  dataChart3: {\n                    ok: 0,\n                    fails: 0\n                  }\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      dataChart1: [],\n      labelsChart1: [],\n      legendChart1: [],\n      dataChart2: [],\n      labelsChart2: [],\n      legendChart2: [],\n      dataChart3: {},\n      queryDate: null,\n      labelsTimeLine: [],\n      dataTimeLine: [],\n      maxTimeLine: [],\n      queryTimeline: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n\n    return _this;\n  }\n\n  _createClass(ShippingMonitoring, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      for (var i = 0; i < this.state.dataTimeLine.length; i++) {\n        this.state.maxTimeLine.push(100);\n      }\n\n      var mixedChart = {\n        labels: this.state.labelsTimeLine,\n        datasets: [{\n          label: \"% Ocupado: \",\n          data: this.state.dataTimeLine\n        }, {\n          label: \"% Máximo: \",\n          data: this.state.maxTimeLine,\n          type: \"line\"\n        }]\n      };\n      var data1 = {\n        labels: this.state.labelsChart1,\n        datasets: [{\n          label: \"Aeropuertos más ocupados\",\n          data: this.state.dataChart1,\n          maxBarThickness: 10\n        }]\n      };\n      var data2 = {\n        labels: this.state.labelsChart2,\n        datasets: [{\n          label: \"Vuelos más ocupados\",\n          data: this.state.dataChart2,\n          maxBarThickness: 10\n        }]\n      };\n      var data3 = {\n        labels: [\"Éxitos\", \"Fallos\"],\n        datasets: [{\n          label: \"Procesamiento\",\n          data: [this.state.dataChart3[\"ok\"], this.state.dataChart3[\"fails\"]],\n          maxBarThickness: 10\n        }]\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"bg-secondary shadow\",\n        style: {\n          width: \"80rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"bg-white border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"10\",\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, \"Simulaci\\xF3n\")))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-lg-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, this.state.queryTimeline && /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: mixedChart,\n        options: chartExample2.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        style: {\n          width: \"30%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }, \"Fecha\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: true,\n        onChange: function onChange(e) {\n          _this2.setState({\n            queryDate: new Date(e)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        outline: true,\n        type: \"button\",\n        onClick: this.queryTimelineMoment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-zoom-split-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 33\n        }\n      }))))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }, \"TOP 5 Almacenes ocupados\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data1,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }, this.state.legendChart1.map(function (airport) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 36\n          }\n        }, airport);\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 23\n        }\n      }, \"TOP 5 Vuelos ocupados\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data2,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }, this.state.legendChart2.map(function (flight) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 31\n          }\n        }, flight[0], \"-\", flight[1]);\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 23\n        }\n      }, \"Resumen\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Doughnut, {\n        data: data3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 27\n        }\n      }, \"Casos de \\xE9xito\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 27\n        }\n      }, \"Casos de fallo\")))))))))));\n    }\n  }]);\n\n  return ShippingMonitoring;\n}(React.Component);\n\nexport default ShippingMonitoring;","map":{"version":3,"sources":["C:/redexfront/redexfront/src/views/examples/Monitoring.js"],"names":["React","Chart","Bar","Doughnut","Slider","makeStyles","Typography","ReactDatetime","serviceTimeline","APISimulation","Alert","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","ListGroup","ListGroupItem","chartOptions","parseOptions","chartExample1","chartExample3","Header","APIIncident","serviceIncident","ShippingMonitoring","props","handleChange","event","setState","target","name","value","componentWillMount","getDashboards","resultIncident","dataChart1","labelsChart1","legendChart1","dataChart2","labelsChart2","legendChart2","length","map","airport","push","flight","console","log","dataChart3","ok","fails","state","queryDate","labelsTimeLine","dataTimeLine","maxTimeLine","queryTimeline","bind","window","i","mixedChart","labels","datasets","label","data","type","data1","maxBarThickness","data2","data3","width","chartExample2","options","placeholder","e","Date","queryTimelineMoment","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDatetime from \"react-datetime\";\r\nconst serviceTimeline = new APISimulation();\r\n// reactstrap components\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"reactstrap\";\r\n// core components\r\n\r\nimport {\r\n  chartOptions,\r\n  parseOptions,\r\n  chartExample1,\r\n  chartExample3,\r\n} from \"variables/charts.js\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport APIIncident from \"../../apis/APIIncident.js\";\r\nconst serviceIncident = new APIIncident();\r\n\r\nclass ShippingMonitoring extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataChart1: [],\r\n      labelsChart1: [],\r\n      legendChart1: [],\r\n      dataChart2: [],\r\n      labelsChart2: [],\r\n      legendChart2: [],\r\n      dataChart3: {},\r\n      queryDate: null,\r\n      labelsTimeLine: [],\r\n      dataTimeLine: [],\r\n      maxTimeLine: [],\r\n      queryTimeline: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    if (window.Chart) {\r\n      parseOptions(Chart, chartOptions());\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  componentWillMount = async () => {\r\n    const resultIncident = await serviceIncident.getDashboards();\r\n    let dataChart1 = [],\r\n      labelsChart1 = [],\r\n      legendChart1 = [],\r\n      dataChart2 = [],\r\n      labelsChart2 = [],\r\n      legendChart2 = [];\r\n    if (resultIncident[\"estado\"].length < 3) {\r\n      resultIncident[\"resultado\"][\"byairports\"].map((airport) => {\r\n        dataChart1.push(airport[\"count\"]);\r\n        labelsChart1.push(airport[\"code\"]);\r\n        legendChart1.push(airport[\"name\"]);\r\n      });\r\n      resultIncident[\"resultado\"][\"byflightplans\"].map((flight) => {\r\n        dataChart2.push(flight[\"count\"]);\r\n        labelsChart2.push(flight[\"idFlight\"]);\r\n        legendChart2.push([flight[\"codOrigin\"], flight[\"codDestiny\"]]);\r\n      });\r\n      console.log(dataChart1, labelsChart1, legendChart1);\r\n      console.log(dataChart2, labelsChart2, legendChart2);\r\n      this.setState({\r\n        dataChart1: dataChart1,\r\n        labelsChart1: labelsChart1,\r\n        legendChart1: legendChart1,\r\n        dataChart2: dataChart2,\r\n        labelsChart2: labelsChart2,\r\n        legendChart2: legendChart2,\r\n        dataChart3: resultIncident[\"resultado\"][\"summaryCase\"],\r\n      });\r\n    } else {\r\n      //si hay error porque no hay data\r\n      this.setState({\r\n        dataChart1: [0, 0, 0, 0, 0],\r\n        labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n        legendChart1: [\"N1\", \"N2\", \"N3\", \"N4\", \"N5\"],\r\n        dataChart2: [0, 0, 0, 0, 0],\r\n        labelsChart2: [\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"],\r\n        legendChart2: [\r\n          [\"O1\", \"D1\"],\r\n          [\"O2\", \"D2\"],\r\n          [\"O3\", \"D3\"],\r\n          [\"O4\", \"D4\"],\r\n          [\"O5\", \"D5\"],\r\n        ],\r\n        dataChart3: { ok: 0, fails: 0 },\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    for (let i = 0; i < this.state.dataTimeLine.length; i++) {\r\n      this.state.maxTimeLine.push(100);\r\n    }\r\n    let mixedChart = {\r\n      labels: this.state.labelsTimeLine,\r\n      datasets: [\r\n        {\r\n          label: \"% Ocupado: \",\r\n          data: this.state.dataTimeLine,\r\n        },\r\n        {\r\n          label: \"% Máximo: \",\r\n          data: this.state.maxTimeLine,\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    let data1 = {\r\n      labels: this.state.labelsChart1,\r\n      datasets: [\r\n        {\r\n          label: \"Aeropuertos más ocupados\",\r\n          data: this.state.dataChart1,\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n    let data2 = {\r\n      labels: this.state.labelsChart2,\r\n      datasets: [\r\n        {\r\n          label: \"Vuelos más ocupados\",\r\n          data: this.state.dataChart2,\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n    let data3 = {\r\n      labels: [\"Éxitos\", \"Fallos\"],\r\n      datasets: [\r\n        {\r\n          label: \"Procesamiento\",\r\n          data: [this.state.dataChart3[\"ok\"], this.state.dataChart3[\"fails\"]],\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          {/* Form */}\r\n          <Row>\r\n            <Card className=\"bg-secondary shadow\" style={{ width: \"80rem\" }}>\r\n              <CardHeader className=\"bg-white border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <Col xs=\"10\" className=\"col-sm\">\r\n                    <h3 className=\"mb-0\">Simulación</h3>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <div className=\"pl-lg-4\">\r\n                    <Row>\r\n                      {this.state.queryTimeline && (\r\n                        <Col lg=\"9\">\r\n                          <div className=\"chart\">\r\n                            <Bar\r\n                              data={mixedChart}\r\n                              options={chartExample2.options}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n                    </Row>\r\n                    <Row>\r\n                      <FormGroup style={{ width: \"30%\" }}>\r\n                        <label className=\"form-control-label\">Fecha</label>\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-calendar-grid-58\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <ReactDatetime\r\n                            inputProps={{\r\n                              placeholder: \"Seleccionar fecha\",\r\n                            }}\r\n                            timeFormat={true}\r\n                            onChange={(e) => {\r\n                              this.setState({ queryDate: new Date(e) });\r\n                            }}\r\n                          />\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <Button\r\n                              className=\"btn-icon btn-2\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              type=\"button\"\r\n                              onClick={this.queryTimelineMoment}\r\n                            >\r\n                              <span className=\"btn-inner--icon\">\r\n                                <i className=\"ni ni-zoom-split-in\" />\r\n                              </span>\r\n                            </Button>\r\n                          </InputGroupAddon>\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>TOP 5 Almacenes ocupados</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Bar data={data1} options={chartExample3.options} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          {this.state.legendChart1.map((airport) => {\r\n                            return <ListGroupItem>{airport}</ListGroupItem>;\r\n                          })}\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>TOP 5 Vuelos ocupados</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Bar data={data2} options={chartExample3.options} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          {this.state.legendChart2.map((flight) => {\r\n                            return (\r\n                              <ListGroupItem>\r\n                                {flight[0]}-{flight[1]}\r\n                              </ListGroupItem>\r\n                            );\r\n                          })}\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>Resumen</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Doughnut data={data3} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          <ListGroupItem>Casos de éxito</ListGroupItem>\r\n                          <ListGroupItem>Casos de fallo</ListGroupItem>\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ShippingMonitoring;\r\n"]},"metadata":{},"sourceType":"module"}