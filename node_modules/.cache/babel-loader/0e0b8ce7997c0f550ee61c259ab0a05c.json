{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\src\\\\views\\\\examples\\\\Shipments\\\\Shipment.js\";\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Badge, Card, CardHeader, CardFooter, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle, Modal, Table, Container, Row, Col, Form, FormGroup, InputGroupAddon, InputGroupText, Input, InputGroup, Label } from \"reactstrap\";\nimport ReactDatetime from \"react-datetime\"; // core components\n\nimport Header from \"components/Headers/Header.js\"; //apis\n\nimport APIShipment from \"./../../../apis/APIShipment.js\";\nimport APICountry from \"apis/APICountry.js\";\nimport APICity from \"apis/APICity.js\";\n\nvar Shipment = /*#__PURE__*/function (_React$Component) {\n  _inherits(Shipment, _React$Component);\n\n  var _super = _createSuper(Shipment);\n\n  function Shipment(props) {\n    var _this;\n\n    _classCallCheck(this, Shipment);\n\n    _this = _super.call(this, props);\n\n    _this.newShipment = function () {\n      _this.props.history.push({\n        pathname: \"/admin/addShipmentStep1\"\n      });\n    };\n\n    _this.showRoutes = function (flightPlan) {\n      _this.setState({\n        stateModal: !_this.state.stateModal,\n        infoModal: flightPlan\n      });\n    };\n\n    _this.handleChange = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var nameState, idCountry, cityService, idCity, citiesA, cities;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState(_defineProperty({}, event.target.name, event.target.value)); //si el cambio es del país se obtienen ciudades\n\n\n                nameState = event.target.name;\n                idCountry = event.target.value;\n\n                if (!(nameState.localeCompare(\"idCountryFilter\") == 0)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                cityService = new APICity();\n                idCity = sessionStorage.getItem(\"idCityAirport\");\n                _context.next = 8;\n                return cityService.queryCitiesByIdCountry(idCountry, idCity);\n\n              case 8:\n                citiesA = _context.sent;\n                cities = [];\n\n                if (citiesA[\"estado\"].length < 3) {\n                  //si hay ciudades\n                  cities.push(citiesA[\"resultado\"]);\n                }\n\n                _this.setState({\n                  cities: cities\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.findShipmentByTrackingCode = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var shipmentService, infoShipment, message;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              shipmentService = new APIShipment();\n              _context2.next = 3;\n              return shipmentService.findShipmentByTrackingCode(_this.state.trackingCode);\n\n            case 3:\n              infoShipment = _context2.sent;\n              message = infoShipment[\"estado\"];\n\n              if (message.length < 3) {\n                //Ok\n                _this.setState({\n                  infoShipment: infoShipment[\"resultado\"],\n                  foundShipment: true\n                });\n              } else {\n                _this.setState({\n                  foundShipment: false\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.finishShipment = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(trackingCode) {\n        var shipmentService, infoShipments, idAirport, _infoShipments;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                shipmentService = new APIShipment();\n                _context3.next = 3;\n                return shipmentService.finishShipmentNow('FINALIZADO', trackingCode);\n\n              case 3:\n                infoShipments = _context3.sent;\n\n                if (!(_this.state.foundShipment && infoShipments[\"estado\"].length < 3)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _this.setState({\n                  infoShipment: infoShipments[\"resultado\"]\n                });\n\n                _context3.next = 14;\n                break;\n\n              case 8:\n                if (!(infoShipments[\"estado\"].length < 3)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                idAirport = sessionStorage.getItem(\"idAirport\");\n                _context3.next = 12;\n                return shipmentService.listShipments(idAirport);\n\n              case 12:\n                _infoShipments = _context3.sent;\n\n                _this.setState({\n                  infoShipments: _infoShipments[\"resultado\"]\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.filterData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var shipmentsFilter, defineStartDate, defineEndDate, shipmentsForFilter, shipmentService, idAirport, infoShipments;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //País, ciudad, fechas\n              shipmentsFilter = [];\n              defineEndDate = false;\n              console.log(_this.state.startDate == null, _this.state.endDate);\n              shipmentsForFilter = _this.state.infoShipments;\n\n              if (!(shipmentsForFilter.length == 0)) {\n                _context4.next = 11;\n                break;\n              }\n\n              //si está vacío volver a llamar a todos los envíos\n              shipmentService = new APIShipment();\n              idAirport = sessionStorage.getItem(\"idAirport\");\n              _context4.next = 9;\n              return shipmentService.listShipments(idAirport);\n\n            case 9:\n              infoShipments = _context4.sent;\n              shipmentsForFilter = infoShipments[\"estado\"].length < 3 ? infoShipments[\"resultado\"] : [];\n\n            case 11:\n              if (_this.state.idCountryFilter > 0 && _this.state.idCityFilter > 0) {\n                //escogio país y ciudad\n                shipmentsForFilter.map(function (shipment) {\n                  if (shipment[\"destinationAirport\"][\"city\"][\"country\"][\"id\"] == _this.state.idCountryFilter && shipment[\"destinationAirport\"][\"city\"][\"id\"] == _this.state.idCityFilter) shipmentsFilter.push(shipment);\n                });\n              } else if (_this.state.idCountryFilter > 0) {\n                //solo selecciono país\n                shipmentsForFilter.map(function (shipment) {\n                  if (shipment[\"destinationAirport\"][\"city\"][\"country\"][\"id\"] == _this.state.idCountryFilter) shipmentsFilter.push(shipment);\n                });\n              } //console.log(shipmentsFilter);\n\n\n              _this.setState({\n                infoShipments: shipmentsFilter\n              });\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var shipmentService, countryService, idAirport, infoShipments, countries;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              shipmentService = new APIShipment();\n              countryService = new APICountry();\n              idAirport = sessionStorage.getItem(\"idAirport\");\n              _context5.next = 5;\n              return shipmentService.listShipments(idAirport);\n\n            case 5:\n              infoShipments = _context5.sent;\n              _context5.next = 8;\n              return countryService.queryAllCountries();\n\n            case 8:\n              countries = _context5.sent;\n\n              if (infoShipments[\"estado\"].length < 3) {\n                //se tienen los pedidos\n                _this.setState({\n                  infoShipments: infoShipments[\"resultado\"]\n                });\n              }\n\n              if (countries[\"estado\"].length < 3) {\n                _this.setState({\n                  countries: countries[\"resultado\"]\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.state = {\n      stateModal: false,\n      infoModal: [],\n      infoShipments: [],\n      trackingCode: 0,\n      foundShipment: false,\n      infoShipment: [],\n      idCityFilter: 0,\n      idCountryFilter: 0,\n      countries: [],\n      cities: [],\n      startDate: null,\n      endDate: null\n    };\n    _this.newShipment = _this.newShipment.bind(_assertThisInitialized(_this));\n    _this.showRoutes = _this.showRoutes.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.findShipmentByTrackingCode = _this.findShipmentByTrackingCode.bind(_assertThisInitialized(_this));\n    _this.finishShipment = _this.finishShipment.bind(_assertThisInitialized(_this));\n    _this.filterData = _this.filterData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Shipment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var optionCountries;\n      var optionCities;\n\n      if (this.state.countries.length > 0) {\n        optionCountries = this.state.countries.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: country[\"id\"],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 9\n            }\n          }, country[\"name\"]);\n        });\n      }\n\n      if (this.state.cities.length > 0) {\n        optionCities = this.state.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: city[\"id\"],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 9\n            }\n          }, city[\"name\"]);\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }\n      }, \"Registro de env\\xEDos\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-4 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Buscar por c\\xF3digo de rastreo\",\n        type: \"text\",\n        name: \"trackingCode\" //value={this.state.trackingCode}\n        ,\n        onChange: function onChange(ev) {\n          _this2.handleChange(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        outline: true,\n        type: \"button\",\n        onClick: this.findShipmentByTrackingCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-zoom-split-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 35\n        }\n      })))))))), /*#__PURE__*/React.createElement(Col, {\n        className: \"text-right\",\n        xs: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.newShipment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-plus-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 27\n        }\n      }))))), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"input-filterCountry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }\n      }, \"Pa\\xEDs destino\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Pa\\xEDs destino\",\n        type: \"select\",\n        name: \"idCountryFilter\",\n        id: \"input-filterCountry\",\n        value: this.state.idCountryFilter,\n        onChange: function onChange(ev) {\n          _this2.handleChange(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      }, \"Selecciona un pa\\xEDs\"), optionCountries))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"input-filterCity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }\n      }, \"Ciudad destino\"), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Ciudad destino\",\n        type: \"select\",\n        name: \"idCityFilter\",\n        id: \"input-filterCity\",\n        value: this.state.idCityFilter,\n        onChange: function onChange(ev) {\n          _this2.handleChange(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      }, \"Selecciona una ciudad\"), optionCities))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, \"Fecha de inicio\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: false,\n        dateFormat: true,\n        renderDay: function renderDay(props, currentDate, selectedDate) {\n          var classes = props.className;\n\n          if (_this2.state.startDate && _this2.state.endDate && _this2.state.startDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" start-date\";\n          } else if (_this2.state.startDate && _this2.state.endDate && new Date(_this2.state.startDate._d + \"\") < new Date(currentDate._d + \"\") && new Date(_this2.state.endDate._d + \"\") > new Date(currentDate._d + \"\")) {\n            classes += \" middle-date\";\n          } else if (_this2.state.endDate && _this2.state.endDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" end-date\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, props, {\n            className: classes,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }\n          }), currentDate.date());\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            startDate: e\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 27\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }, \"Fecha de fin\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: false,\n        dateFormat: true,\n        renderDay: function renderDay(props, currentDate, selectedDate) {\n          var classes = props.className;\n\n          if (_this2.state.startDate && _this2.state.endDate && _this2.state.startDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" start-date\";\n          } else if (_this2.state.startDate && _this2.state.endDate && new Date(_this2.state.startDate._d + \"\") < new Date(currentDate._d + \"\") && new Date(_this2.state.endDate._d + \"\") > new Date(currentDate._d + \"\")) {\n            classes += \" middle-date\";\n          } else if (_this2.state.endDate && _this2.state.endDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" end-date\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, props, {\n            className: classes,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 31\n            }\n          }), currentDate.date());\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            endDate: e\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        className: \"col-sm text-right\",\n        lg: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.filterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 23\n        }\n      }, \"Filtrar\"))))), /*#__PURE__*/React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 23\n        }\n      }, \"COD. RASTREO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 23\n        }\n      }, \"PA\\xCDS DESTINO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 23\n        }\n      }, \"CIUDAD DESTINO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 23\n        }\n      }, \"AEROPUERTO DESTINO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 23\n        }\n      }, \"CLIENTE EMISOR\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 23\n        }\n      }, \"CLIENTE RECEPTOR\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 23\n        }\n      }, \"FECHA REGISTRO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 23\n        }\n      }, \"HORA REGISTRO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 23\n        }\n      }, \"ESTADO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 23\n        }\n      }, \"ACCIONES\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 19\n        }\n      }, !this.state.foundShipment ? this.state.infoShipments.map(function (shipment) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: shipment[\"id\"],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 29\n          }\n        }, shipment[\"trackingCode\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }\n        }, shipment[\"destinationAirport\"][\"city\"][\"country\"][\"name\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }\n        }, shipment[\"destinationAirport\"][\"city\"][\"name\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 29\n          }\n        }, shipment[\"destinationAirport\"][\"description\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }\n        }, shipment[\"send_client\"][\"name\"], \" \", shipment[\"send_client\"][\"lastname\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 29\n          }\n        }, shipment[\"receiveClientName\"], \" \", shipment[\"receiveClientLastname\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }\n        }, shipment[\"registerDate\"].substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }\n        }, shipment[\"registerDate\"].substring(11, 16)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }\n        }, shipment[\"status\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(DropdownToggle, {\n          className: \"btn-icon-only text-light\",\n          href: \"#pablo\",\n          role: \"button\",\n          size: \"sm\",\n          color: \"\",\n          onClick: function onClick(e) {\n            return e.preventDefault();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-ellipsis-v\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 35\n          }\n        })), /*#__PURE__*/React.createElement(DropdownMenu, {\n          className: \"dropdown-menu-arrow\",\n          right: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(DropdownItem, {\n          href: \"#pablo\",\n          onClick: function onClick() {\n            return _this2.showRoutes(shipment[\"pack\"][\"routePlan\"][\"flightPlans\"]);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 35\n          }\n        }, \"Ver ruta\"), /*#__PURE__*/React.createElement(DropdownItem, {\n          href: \"#pablo\",\n          onClick: function onClick() {\n            return _this2.finishShipment(shipment[\"trackingCode\"]);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 35\n          }\n        }, \"Finalizar\")))));\n      }) :\n      /*#__PURE__*/\n      //información de un solo envío para la búsqueda\n      React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"trackingCode\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"destinationAirport\"][\"city\"][\"country\"][\"name\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"destinationAirport\"][\"city\"][\"name\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"destinationAirport\"][\"description\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"send_client\"][\"name\"], \" \", this.state.infoShipment[\"send_client\"][\"lastname\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"receiveClientName\"], \" \", this.state.infoShipment[\"receiveClientLastname\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"registerDate\"].substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"registerDate\"].substring(11, 16)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, this.state.infoShipment[\"status\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        className: \"btn-icon-only text-light\",\n        href: \"#pablo\",\n        role: \"button\",\n        size: \"sm\",\n        color: \"\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-ellipsis-v\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"dropdown-menu-arrow\",\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        href: \"#pablo\",\n        onClick: function onClick() {\n          return _this2.showRoutes(_this2.state.infoShipment[\"pack\"][\"routePlan\"][\"flightPlans\"]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 31\n        }\n      }, \"Ver ruta\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        href: \"#pablo\",\n        onClick: function onClick() {\n          return _this2.finishShipment(_this2.state.infoShipment[\"trackingCode\"]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 31\n        }\n      }, \"Finalizar\"))))))), /*#__PURE__*/React.createElement(Modal, {\n        className: \"modal-dialog-centered\",\n        isOpen: this.state.stateModal,\n        toggle: function toggle() {\n          return _this2.showRoutes([]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"modal-title\",\n        id: \"exampleModalLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }\n      }, \"Ruta\"), /*#__PURE__*/React.createElement(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.showRoutes([]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 23\n        }\n      }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 27\n        }\n      }, \"COD. VUELO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 27\n        }\n      }, \"ORIGEN\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 27\n        }\n      }, \"DESTINO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 27\n        }\n      }, \"FECHA Y HORA DE DESPEGUE\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 27\n        }\n      }, \"FECHA Y HORA DE ATERRIZAJE\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 27\n        }\n      }, \"CIUDA/PA\\xCDS ORIGEN\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 27\n        }\n      }, \"CIUDA/PA\\xCDS DESTINO\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 23\n        }\n      }, this.state.infoModal.map(function (flightPlan) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: flightPlan[\"id\"],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }\n        }, flightPlan[\"flight\"][\"idFlight\"]), /*#__PURE__*/React.createElement(\"td\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 29\n          }\n        }, flightPlan[\"flight\"][\"takeOffAirport\"][\"code\"]), /*#__PURE__*/React.createElement(\"td\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }\n        }, flightPlan[\"flight\"][\"arrivalAirport\"][\"code\"]), /*#__PURE__*/React.createElement(\"td\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 29\n          }\n        }, flightPlan[\"takeOffDate\"], \" \", flightPlan[\"flight\"][\"takeOffTime\"]), /*#__PURE__*/React.createElement(\"td\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 29\n          }\n        }, flightPlan[\"arrivalDate\"], \" \", flightPlan[\"flight\"][\"arrivalTime\"]), /*#__PURE__*/React.createElement(\"td\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 29\n          }\n        }, flightPlan[\"flight\"][\"takeOffAirport\"][\"city\"][\"name\"], \",\", \" \", flightPlan[\"flight\"][\"takeOffAirport\"][\"city\"][\"country\"][\"name\"]), /*#__PURE__*/React.createElement(\"td\", {\n          scope: \"col\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 29\n          }\n        }, flightPlan[\"flight\"][\"arrivalAirport\"][\"city\"][\"name\"], \",\", \" \", flightPlan[\"flight\"][\"arrivalAirport\"][\"city\"][\"country\"][\"name\"]));\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.showRoutes([]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }\n      }, \"Cerrar\"))))))));\n    }\n  }]);\n\n  return Shipment;\n}(React.Component);\n\nexport default Shipment;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Ciclo9/DP1/Front-end/redexfront/redexfront/src/views/examples/Shipments/Shipment.js"],"names":["React","Button","Badge","Card","CardHeader","CardFooter","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","Modal","Table","Container","Row","Col","Form","FormGroup","InputGroupAddon","InputGroupText","Input","InputGroup","Label","ReactDatetime","Header","APIShipment","APICountry","APICity","Shipment","props","newShipment","history","push","pathname","showRoutes","flightPlan","setState","stateModal","state","infoModal","handleChange","event","target","name","value","nameState","idCountry","localeCompare","cityService","idCity","sessionStorage","getItem","queryCitiesByIdCountry","citiesA","cities","length","findShipmentByTrackingCode","shipmentService","trackingCode","infoShipment","message","foundShipment","finishShipment","finishShipmentNow","infoShipments","idAirport","listShipments","filterData","shipmentsFilter","defineEndDate","console","log","startDate","endDate","shipmentsForFilter","idCountryFilter","idCityFilter","map","shipment","componentWillMount","countryService","queryAllCountries","countries","bind","optionCountries","optionCities","country","city","ev","placeholder","currentDate","selectedDate","classes","className","_d","Date","date","e","substring","preventDefault","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,YANF,EAOEC,YAPF,EAQEC,oBARF,EASEC,cATF,EAUEC,KAVF,EAWEC,KAXF,EAYEC,SAZF,EAaEC,GAbF,EAcEC,GAdF,EAeEC,IAfF,EAgBEC,SAhBF,EAiBEC,eAjBF,EAkBEC,cAlBF,EAmBEC,KAnBF,EAoBEC,UApBF,EAqBEC,KArBF,QAsBO,YAtBP;AAuBA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAwBnBC,WAxBmB,GAwBL,YAAM;AAClB,YAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE;AADY,OAAxB;AAGD,KA5BkB;;AAAA,UA6BnBC,UA7BmB,GA6BN,UAACC,UAAD,EAAgB;AAC3B,YAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE,CAAC,MAAKC,KAAL,CAAWD,UADZ;AAEZE,QAAAA,SAAS,EAAEJ;AAFC,OAAd;AAID,KAlCkB;;AAAA,UAmCnBK,YAnCmB;AAAA,0EAmCJ,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,sBAAKL,QAAL,qBACGK,KAAK,CAACC,MAAN,CAAaC,IADhB,EACuBF,KAAK,CAACC,MAAN,CAAaE,KADpC,GADa,CAIb;;;AACIC,gBAAAA,SALS,GAKGJ,KAAK,CAACC,MAAN,CAAaC,IALhB;AAMTG,gBAAAA,SANS,GAMGL,KAAK,CAACC,MAAN,CAAaE,KANhB;;AAAA,sBAOVC,SAAS,CAACE,aAAV,CAAwB,iBAAxB,KAA4C,CAPlC;AAAA;AAAA;AAAA;;AAQLC,gBAAAA,WARK,GAQS,IAAIrB,OAAJ,EART;AASPsB,gBAAAA,MATO,GASEC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CATF;AAAA;AAAA,uBAUWH,WAAW,CAACI,sBAAZ,CACpBN,SADoB,EACTG,MADS,CAVX;;AAAA;AAULI,gBAAAA,OAVK;AAaPC,gBAAAA,MAbO,GAaE,EAbF;;AAcX,oBAAID,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAAlB,GAAyB,CAA7B,EAA+B;AAC7B;AACAD,kBAAAA,MAAM,CAACtB,IAAP,CAAYqB,OAAO,CAAC,WAAD,CAAnB;AACD;;AACD,sBAAKjB,QAAL,CAAc;AAAEkB,kBAAAA,MAAM,EAAEA;AAAV,iBAAd;;AAlBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAnCI;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAwDnBE,0BAxDmB,yEAwDU;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,cAAAA,eADqB,GACH,IAAIhC,WAAJ,EADG;AAAA;AAAA,qBAEAgC,eAAe,CAACD,0BAAhB,CACzB,MAAKlB,KAAL,CAAWoB,YADc,CAFA;;AAAA;AAErBC,cAAAA,YAFqB;AAKrBC,cAAAA,OALqB,GAKXD,YAAY,CAAC,QAAD,CALD;;AAM3B,kBAAIC,OAAO,CAACL,MAAR,GAAiB,CAArB,EAAwB;AACtB;AACA,sBAAKnB,QAAL,CAAc;AACZuB,kBAAAA,YAAY,EAAEA,YAAY,CAAC,WAAD,CADd;AAEZE,kBAAAA,aAAa,EAAE;AAFH,iBAAd;AAID,eAND,MAMO;AACL,sBAAKzB,QAAL,CAAc;AACZyB,kBAAAA,aAAa,EAAE;AADH,iBAAd;AAGD;;AAhB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxDV;;AAAA,UA0EnBC,cA1EmB;AAAA,2EA0EF,kBAAOJ,YAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTD,gBAAAA,eADS,GACS,IAAIhC,WAAJ,EADT;AAAA;AAAA,uBAEagC,eAAe,CAACM,iBAAhB,CAAkC,YAAlC,EAA+CL,YAA/C,CAFb;;AAAA;AAETM,gBAAAA,aAFS;;AAAA,sBAGZ,MAAK1B,KAAL,CAAWuB,aAAX,IAA4BG,aAAa,CAAC,QAAD,CAAb,CAAwBT,MAAxB,GAA+B,CAH/C;AAAA;AAAA;AAAA;;AAKb,sBAAKnB,QAAL,CAAc;AAACuB,kBAAAA,YAAY,EAACK,aAAa,CAAC,WAAD;AAA3B,iBAAd;;AALa;AAAA;;AAAA;AAAA,sBAONA,aAAa,CAAC,QAAD,CAAb,CAAwBT,MAAxB,GAA+B,CAPzB;AAAA;AAAA;AAAA;;AAQTU,gBAAAA,SARS,GAQGf,cAAc,CAACC,OAAf,CAAuB,WAAvB,CARH;AAAA;AAAA,uBASaM,eAAe,CAACS,aAAhB,CAA8BD,SAA9B,CATb;;AAAA;AASTD,gBAAAA,cATS;;AAUb,sBAAK5B,QAAL,CAAc;AAAC4B,kBAAAA,aAAa,EAACA,cAAa,CAAC,WAAD;AAA5B,iBAAd;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA1EE;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA2FnBG,UA3FmB,yEA2FN;AAAA;AAAA;AAAA;AAAA;AAAA;AACX;AACIC,cAAAA,eAFO,GAEU,EAFV;AAIUC,cAAAA,aAJV,GAI0B,KAJ1B;AAKXC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKjC,KAAL,CAAWkC,SAAX,IAAsB,IAAlC,EAAwC,MAAKlC,KAAL,CAAWmC,OAAnD;AAEIC,cAAAA,kBAPO,GAOc,MAAKpC,KAAL,CAAW0B,aAPzB;;AAAA,oBAQPU,kBAAkB,CAACnB,MAAnB,IAA2B,CARpB;AAAA;AAAA;AAAA;;AAST;AACME,cAAAA,eAVG,GAUe,IAAIhC,WAAJ,EAVf;AAWHwC,cAAAA,SAXG,GAWSf,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAXT;AAAA;AAAA,qBAYmBM,eAAe,CAACS,aAAhB,CAA8BD,SAA9B,CAZnB;;AAAA;AAYHD,cAAAA,aAZG;AAaTU,cAAAA,kBAAkB,GAAGV,aAAa,CAAC,QAAD,CAAb,CAAwBT,MAAxB,GAAiC,CAAjC,GAAoCS,aAAa,CAAC,WAAD,CAAjD,GAA+D,EAApF;;AAbS;AAiBX,kBAAI,MAAK1B,KAAL,CAAWqC,eAAX,GAA2B,CAA3B,IAAgC,MAAKrC,KAAL,CAAWsC,YAAX,GAAwB,CAA5D,EAA+D;AAC7D;AAEAF,gBAAAA,kBAAkB,CAACG,GAAnB,CAAuB,UAACC,QAAD,EAAY;AACjC,sBAAGA,QAAQ,CAAC,oBAAD,CAAR,CAA+B,MAA/B,EAAuC,SAAvC,EAAkD,IAAlD,KAAyD,MAAKxC,KAAL,CAAWqC,eAApE,IAAuFG,QAAQ,CAAC,oBAAD,CAAR,CAA+B,MAA/B,EAAuC,IAAvC,KAA8C,MAAKxC,KAAL,CAAWsC,YAAnJ,EACER,eAAe,CAACpC,IAAhB,CAAqB8C,QAArB;AACH,iBAHD;AAID,eAPD,MAQK,IAAG,MAAKxC,KAAL,CAAWqC,eAAX,GAA2B,CAA9B,EAAgC;AACnC;AACAD,gBAAAA,kBAAkB,CAACG,GAAnB,CAAuB,UAACC,QAAD,EAAY;AACjC,sBAAGA,QAAQ,CAAC,oBAAD,CAAR,CAA+B,MAA/B,EAAuC,SAAvC,EAAkD,IAAlD,KAAyD,MAAKxC,KAAL,CAAWqC,eAAvE,EACEP,eAAe,CAACpC,IAAhB,CAAqB8C,QAArB;AACH,iBAHD;AAID,eA/BU,CAgCX;;;AACA,oBAAK1C,QAAL,CAAc;AAAC4B,gBAAAA,aAAa,EAACI;AAAf,eAAd;;AAjCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3FM;AAAA,UAgInBW,kBAhImB,yEAgIE;AAAA;AAAA;AAAA;AAAA;AAAA;AACbtB,cAAAA,eADa,GACK,IAAIhC,WAAJ,EADL;AAEbuD,cAAAA,cAFa,GAEI,IAAItD,UAAJ,EAFJ;AAGbuC,cAAAA,SAHa,GAGDf,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAHC;AAAA;AAAA,qBAISM,eAAe,CAACS,aAAhB,CAA8BD,SAA9B,CAJT;;AAAA;AAIbD,cAAAA,aAJa;AAAA;AAAA,qBAKMgB,cAAc,CAACC,iBAAf,EALN;;AAAA;AAKbC,cAAAA,SALa;;AAOnB,kBAAIlB,aAAa,CAAC,QAAD,CAAb,CAAwBT,MAAxB,GAAiC,CAArC,EAAwC;AACtC;AACA,sBAAKnB,QAAL,CAAc;AACZ4B,kBAAAA,aAAa,EAAEA,aAAa,CAAC,WAAD;AADhB,iBAAd;AAID;;AACD,kBAAIkB,SAAS,CAAC,QAAD,CAAT,CAAoB3B,MAApB,GAA2B,CAA/B,EAAiC;AAC/B,sBAAKnB,QAAL,CAAc;AACZ8C,kBAAAA,SAAS,EAAEA,SAAS,CAAC,WAAD;AADR,iBAAd;AAID;;AAnBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhIF;AAEjB,UAAK5C,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,KADD;AAEXE,MAAAA,SAAS,EAAE,EAFA;AAGXyB,MAAAA,aAAa,EAAE,EAHJ;AAIXN,MAAAA,YAAY,EAAE,CAJH;AAKXG,MAAAA,aAAa,EAAE,KALJ;AAMXF,MAAAA,YAAY,EAAE,EANH;AAOXiB,MAAAA,YAAY,EAAE,CAPH;AAQXD,MAAAA,eAAe,EAAE,CARN;AASXO,MAAAA,SAAS,EAAE,EATA;AAUX5B,MAAAA,MAAM,EAAE,EAVG;AAWXkB,MAAAA,SAAS,EAAE,IAXA;AAYXC,MAAAA,OAAO,EAAE;AAZE,KAAb;AAcA,UAAK3C,WAAL,GAAmB,MAAKA,WAAL,CAAiBqD,IAAjB,+BAAnB;AACA,UAAKjD,UAAL,GAAkB,MAAKA,UAAL,CAAgBiD,IAAhB,+BAAlB;AACA,UAAK3C,YAAL,GAAoB,MAAKA,YAAL,CAAkB2C,IAAlB,+BAApB;AACA,UAAK3B,0BAAL,GAAkC,MAAKA,0BAAL,CAAgC2B,IAAhC,+BAAlC;AACA,UAAKrB,cAAL,GAAsB,MAAKA,cAAL,CAAoBqB,IAApB,+BAAtB;AACA,UAAKhB,UAAL,GAAkB,MAAKA,UAAL,CAAgBgB,IAAhB,+BAAlB;AArBiB;AAsBlB;;;;6BAgIQ;AAAA;;AACP,UAAIC,eAAJ;AACA,UAAIC,YAAJ;;AACA,UAAI,KAAK/C,KAAL,CAAW4C,SAAX,CAAqB3B,MAArB,GAA8B,CAAlC,EAAqC;AACnC6B,QAAAA,eAAe,GAAG,KAAK9C,KAAL,CAAW4C,SAAX,CAAqBL,GAArB,CAAyB,UAACS,OAAD;AAAA,8BACzC;AAAQ,YAAA,KAAK,EAAEA,OAAO,CAAC,IAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BA,OAAO,CAAC,MAAD,CAAtC,CADyC;AAAA,SAAzB,CAAlB;AAGD;;AACD,UAAI,KAAKhD,KAAL,CAAWgB,MAAX,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAChC8B,QAAAA,YAAY,GAAG,KAAK/C,KAAL,CAAWgB,MAAX,CAAkBuB,GAAlB,CAAsB,UAACU,IAAD;AAAA,8BACnC;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAAC,IAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4BA,IAAI,CAAC,MAAD,CAAhC,CADmC;AAAA,SAAtB,CAAf;AAGD;;AAGD,0BACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,OAArB;AAA6B,QAAA,KAAK,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,6BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,WAAW,EAAC,iCADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,cAHP,CAIE;AAJF;AAKE,QAAA,QAAQ,EAAE,kBAACC,EAAD,EAAQ;AAChB,UAAA,MAAI,CAAChD,YAAL,CAAkBgD,EAAlB;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAUE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,MAHT;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAE,KAAKhC,0BALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF,CAVF,CADF,CADF,CADF,CAJF,eAkCE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAA6B,QAAA,EAAE,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE,KAAK1B,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF,CAlCF,CADF,eAgDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,OAAO,EAAC,qBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,oBAAC,KAAD;AACE,QAAA,WAAW,EAAC,iBADd;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,iBAHP;AAIE,QAAA,EAAE,EAAG,qBAJP;AAKE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWqC,eALpB;AAME,QAAA,QAAQ,EAAE,kBAACa,EAAD,EAAQ;AAAC,UAAA,MAAI,CAAChD,YAAL,CAAkBgD,EAAlB;AAAsB,SAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQA;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARA,EASCJ,eATD,CAJF,CADF,CAHF,eAqBE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,OAAO,EAAC,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,oBAAC,KAAD;AACE,QAAA,WAAW,EAAC,gBADd;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,EAAE,EAAG,kBAJP;AAKE,QAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWsC,YALpB;AAME,QAAA,QAAQ,EAAE,kBAACY,EAAD,EAAQ;AAAC,UAAA,MAAI,CAAChD,YAAL,CAAkBgD,EAAlB;AAAsB,SAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQA;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARA,EASCH,YATD,CAJF,CADF,CArBF,eAuCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE;AACVI,UAAAA,WAAW,EAAE;AADH,SADd;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,UAAU,EAAE,IALd;AAME,QAAA,SAAS,EAAE,mBAAC5D,KAAD,EAAQ6D,WAAR,EAAqBC,YAArB,EAAsC;AAC/C,cAAIC,OAAO,GAAG/D,KAAK,CAACgE,SAApB;;AACA,cACE,MAAI,CAACvD,KAAL,CAAWkC,SAAX,IACA,MAAI,CAAClC,KAAL,CAAWmC,OADX,IAEA,MAAI,CAACnC,KAAL,CAAWkC,SAAX,CAAqBsB,EAArB,GAA0B,EAA1B,KAAiCJ,WAAW,CAACI,EAAZ,GAAiB,EAHpD,EAIE;AACAF,YAAAA,OAAO,IAAI,aAAX;AACD,WAND,MAMO,IACL,MAAI,CAACtD,KAAL,CAAWkC,SAAX,IACA,MAAI,CAAClC,KAAL,CAAWmC,OADX,IAEA,IAAIsB,IAAJ,CAAS,MAAI,CAACzD,KAAL,CAAWkC,SAAX,CAAqBsB,EAArB,GAA0B,EAAnC,IACE,IAAIC,IAAJ,CAASL,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CAHF,IAIA,IAAIC,IAAJ,CAAS,MAAI,CAACzD,KAAL,CAAWmC,OAAX,CAAmBqB,EAAnB,GAAwB,EAAjC,IACE,IAAIC,IAAJ,CAASL,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CANG,EAOL;AACAF,YAAAA,OAAO,IAAI,cAAX;AACD,WATM,MASA,IACL,MAAI,CAACtD,KAAL,CAAWmC,OAAX,IACA,MAAI,CAACnC,KAAL,CAAWmC,OAAX,CAAmBqB,EAAnB,GAAwB,EAAxB,KAA+BJ,WAAW,CAACI,EAAZ,GAAiB,EAF3C,EAGL;AACAF,YAAAA,OAAO,IAAI,WAAX;AACD;;AACD,8BACE,4CAAQ/D,KAAR;AAAe,YAAA,SAAS,EAAE+D,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGF,WAAW,CAACM,IAAZ,EADH,CADF;AAKD,SAlCH;AAmCE,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAAC7D,QAAL,CAAc;AAAEoC,YAAAA,SAAS,EAAEyB;AAAb,WAAd,CAAJ;AAAA,SAnCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAFF,CAFF,CAvCF,eAyFE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE;AACVR,UAAAA,WAAW,EAAE;AADH,SADd;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,UAAU,EAAE,IALd;AAME,QAAA,SAAS,EAAE,mBAAC5D,KAAD,EAAQ6D,WAAR,EAAqBC,YAArB,EAAsC;AAC/C,cAAIC,OAAO,GAAG/D,KAAK,CAACgE,SAApB;;AACA,cACE,MAAI,CAACvD,KAAL,CAAWkC,SAAX,IACA,MAAI,CAAClC,KAAL,CAAWmC,OADX,IAEA,MAAI,CAACnC,KAAL,CAAWkC,SAAX,CAAqBsB,EAArB,GAA0B,EAA1B,KAAiCJ,WAAW,CAACI,EAAZ,GAAiB,EAHpD,EAIE;AACAF,YAAAA,OAAO,IAAI,aAAX;AACD,WAND,MAMO,IACL,MAAI,CAACtD,KAAL,CAAWkC,SAAX,IACA,MAAI,CAAClC,KAAL,CAAWmC,OADX,IAEA,IAAIsB,IAAJ,CAAS,MAAI,CAACzD,KAAL,CAAWkC,SAAX,CAAqBsB,EAArB,GAA0B,EAAnC,IACE,IAAIC,IAAJ,CAASL,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CAHF,IAIA,IAAIC,IAAJ,CAAS,MAAI,CAACzD,KAAL,CAAWmC,OAAX,CAAmBqB,EAAnB,GAAwB,EAAjC,IACE,IAAIC,IAAJ,CAASL,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CANG,EAOL;AACAF,YAAAA,OAAO,IAAI,cAAX;AACD,WATM,MASA,IACL,MAAI,CAACtD,KAAL,CAAWmC,OAAX,IACA,MAAI,CAACnC,KAAL,CAAWmC,OAAX,CAAmBqB,EAAnB,GAAwB,EAAxB,KAA+BJ,WAAW,CAACI,EAAZ,GAAiB,EAF3C,EAGL;AACAF,YAAAA,OAAO,IAAI,WAAX;AACD;;AACD,8BACE,4CAAQ/D,KAAR;AAAe,YAAA,SAAS,EAAE+D,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGF,WAAW,CAACM,IAAZ,EADH,CADF;AAKD,SAlCH;AAmCE,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAAC7D,QAAL,CAAc;AAAEqC,YAAAA,OAAO,EAAEwB;AAAX,WAAd,CAAJ;AAAA,SAnCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAFF,CADA,CAzFF,eA0IE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,EAAE,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,KAAK9B,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CA1IF,CADA,CAhDF,CADF,eA0ME,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gCAAjB;AAAkD,QAAA,UAAU,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAGE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,eAKE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,eAME;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,eAOE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,eASE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF,CADF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAK7B,KAAL,CAAWuB,aAAZ,GACC,KAAKvB,KAAL,CAAW0B,aAAX,CAAyBa,GAAzB,CAA6B,UAACC,QAAD,EAAc;AACzC,4BACE;AAAI,UAAA,GAAG,EAAEA,QAAQ,CAAC,IAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,QAAQ,CAAC,cAAD,CAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QAAQ,CAAC,oBAAD,CAAR,CAA+B,MAA/B,EAAuC,SAAvC,EAAkD,MAAlD,CADH,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QAAQ,CAAC,oBAAD,CAAR,CAA+B,MAA/B,EAAuC,MAAvC,CADH,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QAAQ,CAAC,oBAAD,CAAR,CAA+B,aAA/B,CADH,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QAAQ,CAAC,aAAD,CAAR,CAAwB,MAAxB,CADH,EACoC,GADpC,EAEGA,QAAQ,CAAC,aAAD,CAAR,CAAwB,UAAxB,CAFH,CAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QAAQ,CAAC,mBAAD,CADX,EACkC,GADlC,EAEGA,QAAQ,CAAC,uBAAD,CAFX,CAfF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,QAAQ,CAAC,cAAD,CAAR,CAAyBoB,SAAzB,CAAmC,CAAnC,EAAqC,EAArC,CAAL,CAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKpB,QAAQ,CAAC,cAAD,CAAR,CAAyBoB,SAAzB,CAAmC,EAAnC,EAAsC,EAAtC,CAAL,CApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKpB,QAAQ,CAAC,QAAD,CAAb,CArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,cAAD;AACE,UAAA,SAAS,EAAC,0BADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,IAAI,EAAC,IAJP;AAKE,UAAA,KAAK,EAAC,EALR;AAME,UAAA,OAAO,EAAE,iBAACmB,CAAD;AAAA,mBAAOA,CAAC,CAACE,cAAF,EAAP;AAAA,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,CADF,eAWE,oBAAC,YAAD;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,KAAK,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE,oBAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBACP,MAAI,CAACjE,UAAL,CACE4C,QAAQ,CAAC,MAAD,CAAR,CAAiB,WAAjB,EACE,aADF,CADF,CADO;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAgBE,oBAAC,YAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAI,CAAChB,cAAL,CAAoBgB,QAAQ,CAAC,cAAD,CAA5B,CAAL;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhBF,CAXF,CADF,CAtBF,CADF;AA8DD,OA/DD,CADD;AAAA;AAiEK;AACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKxC,KAAL,CAAWqB,YAAX,CAAwB,cAAxB,CAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,oBAAxB,EAA8C,MAA9C,EAAsD,SAAtD,EAAiE,MAAjE,CADH,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,oBAAxB,EAA8C,MAA9C,EAAsD,MAAtD,CADH,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,oBAAxB,EAA8C,aAA9C,CADH,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,aAAxB,EAAuC,MAAvC,CADH,EACmD,GADnD,EAEG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,aAAxB,EAAuC,UAAvC,CAFH,CAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,mBAAxB,CADH,EACiD,GADjD,EAEG,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,uBAAxB,CAFH,CAfF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKrB,KAAL,CAAWqB,YAAX,CAAwB,cAAxB,EAAwCuC,SAAxC,CAAkD,CAAlD,EAAoD,EAApD,CAAL,CAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAK5D,KAAL,CAAWqB,YAAX,CAAwB,cAAxB,EAAwCuC,SAAxC,CAAkD,EAAlD,EAAqD,EAArD,CAAL,CApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAK5D,KAAL,CAAWqB,YAAX,CAAwB,QAAxB,CAAL,CArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,IAAI,EAAC,IAJP;AAKE,QAAA,KAAK,EAAC,EALR;AAME,QAAA,OAAO,EAAE,iBAACsC,CAAD;AAAA,iBAAOA,CAAC,CAACE,cAAF,EAAP;AAAA,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,eAWE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,qBAAxB;AAA8C,QAAA,KAAK,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACjE,UAAL,CACE,MAAI,CAACI,KAAL,CAAWqB,YAAX,CAAwB,MAAxB,EACE,WADF,EAEE,aAFF,CADF,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAI,CAACG,cAAL,CAAoB,MAAI,CAACxB,KAAL,CAAWqB,YAAX,CAAwB,cAAxB,CAApB,CAAL;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbF,CAXF,CADF,CAtBF,CAnEJ,CAhBF,CA1MF,eAyVE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWD,UAFrB;AAGE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACH,UAAL,CAAgB,EAAhB,CAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,EAAE,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,sBAAW,OADb;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,wBAAa,OAHf;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,UAAL,CAAgB,EAAhB,CAAN;AAAA,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAM,uBAAa,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAJF,CALF,eAmBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,gCADZ;AAEE,QAAA,UAAU,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJF,eAKE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCALF,eAME;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANF,eAOE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPF,eAQE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CAJF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,KAAL,CAAWC,SAAX,CAAqBsC,GAArB,CAAyB,UAAC1C,UAAD;AAAA,4BACxB;AAAI,UAAA,GAAG,EAAEA,UAAU,CAAC,IAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,QAAD,CAAV,CAAqB,UAArB,CADH,CADF,eAIE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,QAAD,CAAV,CAAqB,gBAArB,EAAuC,MAAvC,CADH,CAJF,eAOE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,QAAD,CAAV,CAAqB,gBAArB,EAAuC,MAAvC,CADH,CAPF,eAUE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,aAAD,CADb,EAC8B,GAD9B,EAEGA,UAAU,CAAC,QAAD,CAAV,CAAqB,aAArB,CAFH,CAVF,eAcE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,aAAD,CADb,EAC8B,GAD9B,EAEGA,UAAU,CAAC,QAAD,CAAV,CAAqB,aAArB,CAFH,CAdF,eAkBE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,QAAD,CAAV,CAAqB,gBAArB,EAAuC,MAAvC,EAA+C,MAA/C,CADH,OAEI,GAFJ,EAGGA,UAAU,CAAC,QAAD,CAAV,CAAqB,gBAArB,EAAuC,MAAvC,EAA+C,SAA/C,EAA0D,MAA1D,CAHH,CAlBF,eAuBE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,UAAU,CAAC,QAAD,CAAV,CAAqB,gBAArB,EAAuC,MAAvC,EAA+C,MAA/C,CADH,OAEI,GAFJ,EAGIA,UAAU,CAAC,QAAD,CAAV,CAAqB,gBAArB,EAAuC,MAAvC,EAA+C,SAA/C,EAA0D,MAA1D,CAHJ,CAvBF,CADwB;AAAA,OAAzB,CADH,CAhBF,CADF,CAnBF,eAuEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,wBAAa,OAFf;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACD,UAAL,CAAgB,EAAhB,CAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAvEF,CAzVF,CADF,CADF,CAFF,CAFF,CADF;AAwbD;;;;EA9lBoBjC,KAAK,CAACmG,S;;AAgmB7B,eAAexE,QAAf","sourcesContent":["import React from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Modal,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  InputGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport ReactDatetime from \"react-datetime\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\n//apis\r\nimport APIShipment from \"./../../../apis/APIShipment.js\";\r\nimport APICountry from \"apis/APICountry.js\";\r\nimport APICity from \"apis/APICity.js\";\r\n\r\nclass Shipment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stateModal: false,\r\n      infoModal: [],\r\n      infoShipments: [],\r\n      trackingCode: 0,\r\n      foundShipment: false,\r\n      infoShipment: [],\r\n      idCityFilter: 0,\r\n      idCountryFilter: 0,\r\n      countries: [],\r\n      cities: [],\r\n      startDate: null,\r\n      endDate: null,\r\n    };\r\n    this.newShipment = this.newShipment.bind(this);\r\n    this.showRoutes = this.showRoutes.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.findShipmentByTrackingCode = this.findShipmentByTrackingCode.bind(this);\r\n    this.finishShipment = this.finishShipment.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n  }\r\n\r\n  newShipment = () => {\r\n    this.props.history.push({\r\n      pathname: \"/admin/addShipmentStep1\",\r\n    });\r\n  };\r\n  showRoutes = (flightPlan) => {\r\n    this.setState({\r\n      stateModal: !this.state.stateModal,\r\n      infoModal: flightPlan,\r\n    });\r\n  };\r\n  handleChange = async(event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    //si el cambio es del país se obtienen ciudades\r\n    let nameState = event.target.name;\r\n    let idCountry = event.target.value;\r\n    if(nameState.localeCompare(\"idCountryFilter\")==0){\r\n      const cityService = new APICity();\r\n      let idCity = sessionStorage.getItem(\"idCityAirport\");\r\n      const citiesA = await cityService.queryCitiesByIdCountry(\r\n        idCountry, idCity\r\n      );\r\n      let cities = [];\r\n      if (citiesA[\"estado\"].length<3){\r\n        //si hay ciudades\r\n        cities.push(citiesA[\"resultado\"]);\r\n      }\r\n      this.setState({ cities: cities });\r\n    }\r\n  };\r\n  findShipmentByTrackingCode = async () => {\r\n    const shipmentService = new APIShipment();\r\n    const infoShipment = await shipmentService.findShipmentByTrackingCode(\r\n      this.state.trackingCode\r\n    );\r\n    const message = infoShipment[\"estado\"];\r\n    if (message.length < 3) {\r\n      //Ok\r\n      this.setState({\r\n        infoShipment: infoShipment[\"resultado\"],\r\n        foundShipment: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        foundShipment: false,\r\n      });\r\n    }\r\n  };\r\n  finishShipment = async (trackingCode)=>{\r\n    const shipmentService = new APIShipment();\r\n    const infoShipments = await shipmentService.finishShipmentNow('FINALIZADO',trackingCode);   \r\n    if(this.state.foundShipment && infoShipments[\"estado\"].length<3){\r\n\r\n      this.setState({infoShipment:infoShipments[\"resultado\"]})\r\n    }\r\n    else if (infoShipments[\"estado\"].length<3){\r\n      let idAirport = sessionStorage.getItem(\"idAirport\");\r\n      let infoShipments = await shipmentService.listShipments(idAirport);\r\n      this.setState({infoShipments:infoShipments[\"resultado\"]})\r\n\r\n    }\r\n\r\n\r\n  }\r\n  \r\n  filterData = async()=>{\r\n    //País, ciudad, fechas\r\n    let shipmentsFilter= [];\r\n\r\n    let defineStartDate, defineEndDate = false;\r\n    console.log(this.state.startDate==null, this.state.endDate);\r\n\r\n    let shipmentsForFilter = this.state.infoShipments;\r\n    if (shipmentsForFilter.length==0){\r\n      //si está vacío volver a llamar a todos los envíos\r\n      const shipmentService = new APIShipment();\r\n      const idAirport = sessionStorage.getItem(\"idAirport\");\r\n      const infoShipments = await shipmentService.listShipments(idAirport);\r\n      shipmentsForFilter = infoShipments[\"estado\"].length < 3? infoShipments[\"resultado\"]:[];\r\n\r\n    }\r\n\r\n    if (this.state.idCountryFilter>0 && this.state.idCityFilter>0 ){\r\n      //escogio país y ciudad\r\n      \r\n      shipmentsForFilter.map((shipment)=>{\r\n        if(shipment[\"destinationAirport\"][\"city\"][\"country\"][\"id\"]==this.state.idCountryFilter && shipment[\"destinationAirport\"][\"city\"][\"id\"]==this.state.idCityFilter )\r\n          shipmentsFilter.push(shipment);\r\n      });\r\n    }\r\n    else if(this.state.idCountryFilter>0){\r\n      //solo selecciono país\r\n      shipmentsForFilter.map((shipment)=>{\r\n        if(shipment[\"destinationAirport\"][\"city\"][\"country\"][\"id\"]==this.state.idCountryFilter )\r\n          shipmentsFilter.push(shipment);\r\n      });\r\n    }\r\n    //console.log(shipmentsFilter);\r\n    this.setState({infoShipments:shipmentsFilter});\r\n\r\n\r\n  }\r\n  componentWillMount = async () => {\r\n    const shipmentService = new APIShipment();\r\n    const countryService = new APICountry();\r\n    const idAirport = sessionStorage.getItem(\"idAirport\");\r\n    const infoShipments = await shipmentService.listShipments(idAirport);\r\n    const countries =  await countryService.queryAllCountries();\r\n\r\n    if (infoShipments[\"estado\"].length < 3) {\r\n      //se tienen los pedidos\r\n      this.setState({\r\n        infoShipments: infoShipments[\"resultado\"],\r\n      });\r\n      \r\n    }\r\n    if (countries[\"estado\"].length<3){\r\n      this.setState({\r\n        countries: countries[\"resultado\"],\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let optionCountries;\r\n    let optionCities;\r\n    if (this.state.countries.length > 0) {\r\n      optionCountries = this.state.countries.map((country) => (\r\n        <option value={country[\"id\"]}>{country[\"name\"]}</option>\r\n      ));\r\n    }\r\n    if (this.state.cities.length > 0) {\r\n      optionCities = this.state.cities.map((city) => (\r\n        <option value={city[\"id\"]}>{city[\"name\"]}</option>\r\n      ));\r\n    }\r\n    \r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          {/* Tabla */}\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <Row>\r\n                    <Col >\r\n                      <h3 className=\"mb-0\">Registro de envíos</h3>\r\n                    </Col>\r\n                    <Col >\r\n                      <Form>\r\n                        <FormGroup>\r\n                          <InputGroup className=\"mb-4 justify-content-center\">\r\n                            <Input\r\n                              placeholder=\"Buscar por código de rastreo\"\r\n                              type=\"text\"\r\n                              name=\"trackingCode\"\r\n                              //value={this.state.trackingCode}\r\n                              onChange={(ev) => {\r\n                                this.handleChange(ev);\r\n                              }}\r\n                            />\r\n                            <InputGroupAddon addonType=\"prepend\">\r\n                              <Button\r\n                                className=\"btn-icon btn-2\"\r\n                                color=\"primary\"\r\n                                outline\r\n                                type=\"button\"\r\n                                onClick={this.findShipmentByTrackingCode}\r\n                              >\r\n                                <span className=\"btn-inner--icon\">\r\n                                  <i className=\"ni ni-zoom-split-in\" />\r\n                                </span>\r\n                              </Button>\r\n                            </InputGroupAddon>\r\n                          </InputGroup>\r\n                        </FormGroup>\r\n                      </Form>\r\n                    </Col>\r\n                    <Col className=\"text-right\"  xs=\"4\">\r\n                      <Button\r\n                        className=\"btn-icon btn-2\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={this.newShipment}\r\n                      >\r\n                        <span className=\"btn-inner--icon\">\r\n                          <i className=\"fas fa-plus-circle\" />\r\n                        </span>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form>\r\n                  <Row>\r\n                    {/*Filtros*/ }\r\n                    \r\n                    <Col lg=\"2\">                      \r\n                      <FormGroup>\r\n                        <label className=\"form-control-label\" htmlFor=\"input-filterCountry\"> \r\n                            País destino\r\n                        </label>                          \r\n                        <Input\r\n                          placeholder=\"País destino\"\r\n                          type=\"select\"\r\n                          name=\"idCountryFilter\"\r\n                          id = \"input-filterCountry\"\r\n                          value={this.state.idCountryFilter}\r\n                          onChange={(ev) => {this.handleChange(ev)}}\r\n                        >\r\n                        <option value={0}>Selecciona un país</option>  \r\n                        {optionCountries}\r\n                        </Input>                         \r\n                      </FormGroup>                      \r\n                    </Col>\r\n                    <Col lg=\"2\"> \r\n                      <FormGroup>\r\n                        <label className=\"form-control-label\" htmlFor=\"input-filterCity\">\r\n                          Ciudad destino\r\n                        </label>                          \r\n                        <Input\r\n                          placeholder=\"Ciudad destino\"\r\n                          type=\"select\"\r\n                          name=\"idCityFilter\"\r\n                          id = \"input-filterCity\"\r\n                          value={this.state.idCityFilter}\r\n                          onChange={(ev) => {this.handleChange(ev)}}\r\n                        >\r\n                        <option value={0}>Selecciona una ciudad</option>\r\n                        {optionCities}\r\n                        </Input> \r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      {/*filtrar por fechas*/ }\r\n                      <FormGroup>\r\n                        <label className=\"form-control-label\">Fecha de inicio</label>\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-calendar-grid-58\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <ReactDatetime\r\n                            inputProps={{\r\n                              placeholder: \"Seleccionar fecha\"\r\n                            }}\r\n                            timeFormat={false}\r\n                            dateFormat={true}\r\n                            renderDay={(props, currentDate, selectedDate) => {\r\n                              let classes = props.className;\r\n                              if (\r\n                                this.state.startDate &&\r\n                                this.state.endDate &&\r\n                                this.state.startDate._d + \"\" === currentDate._d + \"\"\r\n                              ) {\r\n                                classes += \" start-date\";\r\n                              } else if (\r\n                                this.state.startDate &&\r\n                                this.state.endDate &&\r\n                                new Date(this.state.startDate._d + \"\") <\r\n                                  new Date(currentDate._d + \"\") &&\r\n                                new Date(this.state.endDate._d + \"\") >\r\n                                  new Date(currentDate._d + \"\")\r\n                              ) {\r\n                                classes += \" middle-date\";\r\n                              } else if (\r\n                                this.state.endDate &&\r\n                                this.state.endDate._d + \"\" === currentDate._d + \"\"\r\n                              ) {\r\n                                classes += \" end-date\";\r\n                              }\r\n                              return (\r\n                                <td {...props} className={classes}>\r\n                                  {currentDate.date()}\r\n                                </td>\r\n                              );\r\n                            }}\r\n                            onChange={e => this.setState({ startDate: e })}\r\n                          />\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                    <FormGroup>\r\n                    <label className=\"form-control-label\">Fecha de fin</label>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-calendar-grid-58\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <ReactDatetime\r\n                          inputProps={{\r\n                            placeholder: \"Seleccionar fecha\"\r\n                          }}\r\n                          timeFormat={false}\r\n                          dateFormat={true}\r\n                          renderDay={(props, currentDate, selectedDate) => {\r\n                            let classes = props.className;\r\n                            if (\r\n                              this.state.startDate &&\r\n                              this.state.endDate &&\r\n                              this.state.startDate._d + \"\" === currentDate._d + \"\"\r\n                            ) {\r\n                              classes += \" start-date\";\r\n                            } else if (\r\n                              this.state.startDate &&\r\n                              this.state.endDate &&\r\n                              new Date(this.state.startDate._d + \"\") <\r\n                                new Date(currentDate._d + \"\") &&\r\n                              new Date(this.state.endDate._d + \"\") >\r\n                                new Date(currentDate._d + \"\")\r\n                            ) {\r\n                              classes += \" middle-date\";\r\n                            } else if (\r\n                              this.state.endDate &&\r\n                              this.state.endDate._d + \"\" === currentDate._d + \"\"\r\n                            ) {\r\n                              classes += \" end-date\";\r\n                            }\r\n                            return (\r\n                              <td {...props} className={classes}>\r\n                                {currentDate.date()}\r\n                              </td>\r\n                            );\r\n                          }}\r\n                          onChange={e => this.setState({ endDate: e })}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"col-sm text-right\" lg=\"2\">\r\n                      <br/>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={this.filterData}\r\n                      >\r\n                        Filtrar\r\n                      </Button>\r\n                    </Col>\r\n                    \r\n                  </Row>\r\n                  </Form>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">COD. RASTREO</th>\r\n                      <th scope=\"col\">PAÍS DESTINO</th>\r\n                      <th scope=\"col\">CIUDAD DESTINO</th>\r\n                      <th scope=\"col\">AEROPUERTO DESTINO</th>\r\n                      <th scope=\"col\">CLIENTE EMISOR</th>\r\n                      <th scope=\"col\">CLIENTE RECEPTOR</th>\r\n                      <th scope=\"col\">FECHA REGISTRO</th>\r\n                      <th scope=\"col\">HORA REGISTRO</th>\r\n                      <th scope=\"col\">ESTADO</th>                      \r\n                      <th scope=\"col\">ACCIONES</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {!this.state.foundShipment ? (\r\n                      this.state.infoShipments.map((shipment) => {\r\n                        return (\r\n                          <tr key={shipment[\"id\"]}>\r\n                            <th>{shipment[\"trackingCode\"]}</th>\r\n                            <td>\r\n                              {shipment[\"destinationAirport\"][\"city\"][\"country\"][\"name\"]}\r\n                            </td>\r\n                            <td>\r\n                              {shipment[\"destinationAirport\"][\"city\"][\"name\"]}\r\n                            </td>\r\n                            <td>\r\n                              {shipment[\"destinationAirport\"][\"description\"]}\r\n                            </td>\r\n                            <td>\r\n                              {shipment[\"send_client\"][\"name\"]}{\" \"}\r\n                              {shipment[\"send_client\"][\"lastname\"]}\r\n                            </td>\r\n                            <td>\r\n                              {shipment[\"receiveClientName\"]}{\" \"}\r\n                              {shipment[\"receiveClientLastname\"]}\r\n                            </td>\r\n                            <td>{shipment[\"registerDate\"].substring(0,10)}</td>\r\n                            <td>{shipment[\"registerDate\"].substring(11,16)}</td>\r\n                            <td>{shipment[\"status\"]}</td>                            \r\n                            <td>\r\n                              <UncontrolledDropdown>\r\n                                <DropdownToggle\r\n                                  className=\"btn-icon-only text-light\"\r\n                                  href=\"#pablo\"\r\n                                  role=\"button\"\r\n                                  size=\"sm\"\r\n                                  color=\"\"\r\n                                  onClick={(e) => e.preventDefault()}\r\n                                >\r\n                                  <i className=\"fas fa-ellipsis-v\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu\r\n                                  className=\"dropdown-menu-arrow\"\r\n                                  right\r\n                                >\r\n                                  <DropdownItem\r\n                                    href=\"#pablo\"\r\n                                    onClick={() =>\r\n                                      this.showRoutes(\r\n                                        shipment[\"pack\"][\"routePlan\"][\r\n                                          \"flightPlans\"\r\n                                        ]\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    Ver ruta\r\n                                  </DropdownItem>\r\n                                  <DropdownItem\r\n                                    href=\"#pablo\"\r\n                                    onClick={() =>this.finishShipment(shipment[\"trackingCode\"])}\r\n                                  >\r\n                                    Finalizar\r\n                                  </DropdownItem>\r\n                                </DropdownMenu>\r\n                              </UncontrolledDropdown>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    ) : ( //información de un solo envío para la búsqueda\r\n                      <tr>\r\n                        <th>{this.state.infoShipment[\"trackingCode\"]}</th>\r\n                        <td>\r\n                          {this.state.infoShipment[\"destinationAirport\"][\"city\"][\"country\"][\"name\"]}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.infoShipment[\"destinationAirport\"][\"city\"][\"name\"]}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.infoShipment[\"destinationAirport\"][\"description\"]}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.infoShipment[\"send_client\"][\"name\"]}{\" \"}\r\n                          {this.state.infoShipment[\"send_client\"][\"lastname\"]}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.infoShipment[\"receiveClientName\"]}{\" \"}\r\n                          {this.state.infoShipment[\"receiveClientLastname\"]}\r\n                        </td>\r\n                        <td>{this.state.infoShipment[\"registerDate\"].substring(0,10)}</td>\r\n                        <td>{this.state.infoShipment[\"registerDate\"].substring(11,16)}</td>\r\n                        <td>{this.state.infoShipment[\"status\"]}</td>                        \r\n                        <td>\r\n                          <UncontrolledDropdown>\r\n                            <DropdownToggle\r\n                              className=\"btn-icon-only text-light\"\r\n                              href=\"#pablo\"\r\n                              role=\"button\"\r\n                              size=\"sm\"\r\n                              color=\"\"\r\n                              onClick={(e) => e.preventDefault()}\r\n                            >\r\n                              <i className=\"fas fa-ellipsis-v\" />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                              <DropdownItem\r\n                                href=\"#pablo\"\r\n                                onClick={() =>\r\n                                  this.showRoutes(\r\n                                    this.state.infoShipment[\"pack\"][\r\n                                      \"routePlan\"\r\n                                    ][\"flightPlans\"]\r\n                                  )\r\n                                }\r\n                              >\r\n                                Ver ruta\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                href=\"#pablo\"\r\n                                onClick={() =>this.finishShipment(this.state.infoShipment[\"trackingCode\"])}\r\n                              >\r\n                                Finalizar\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n                <Modal\r\n                  className=\"modal-dialog-centered\"\r\n                  isOpen={this.state.stateModal}\r\n                  toggle={() => this.showRoutes([])}\r\n                >\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                      Ruta\r\n                    </h5>\r\n                    <button\r\n                      aria-label=\"Close\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      type=\"button\"\r\n                      onClick={() => this.showRoutes([])}\r\n                    >\r\n                      <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <Table\r\n                      className=\"align-items-center table-flush\"\r\n                      responsive\r\n                    >\r\n                      <thead className=\"thead-light\">\r\n                        <tr>\r\n                          <th scope=\"col\">COD. VUELO</th>\r\n                          <th scope=\"col\">ORIGEN</th>\r\n                          <th scope=\"col\">DESTINO</th>\r\n                          <th scope=\"col\">FECHA Y HORA DE DESPEGUE</th>\r\n                          <th scope=\"col\">FECHA Y HORA DE ATERRIZAJE</th>\r\n                          <th scope=\"col\">CIUDA/PAÍS ORIGEN</th>\r\n                          <th scope=\"col\">CIUDA/PAÍS DESTINO</th>\r\n                          <th scope=\"col\" />\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.infoModal.map((flightPlan) => (\r\n                          <tr key={flightPlan[\"id\"]}>\r\n                            <th scope=\"col\">\r\n                              {flightPlan[\"flight\"][\"idFlight\"]}\r\n                            </th>\r\n                            <td scope=\"col\">\r\n                              {flightPlan[\"flight\"][\"takeOffAirport\"][\"code\"]}\r\n                            </td>\r\n                            <td scope=\"col\">\r\n                              {flightPlan[\"flight\"][\"arrivalAirport\"][\"code\"]}\r\n                            </td>\r\n                            <td scope=\"col\">\r\n                              {flightPlan[\"takeOffDate\"]}{\" \"}\r\n                              {flightPlan[\"flight\"][\"takeOffTime\"]}\r\n                            </td>\r\n                            <td scope=\"col\">\r\n                              {flightPlan[\"arrivalDate\"]}{\" \"}\r\n                              {flightPlan[\"flight\"][\"arrivalTime\"]}\r\n                            </td>\r\n                            <td scope=\"col\">\r\n                              {flightPlan[\"flight\"][\"takeOffAirport\"][\"city\"][\"name\"] }\r\n                              ,{\" \"}\r\n                              {flightPlan[\"flight\"][\"takeOffAirport\"][\"city\"][\"country\"][\"name\"] }\r\n                            </td>\r\n                            <td scope=\"col\">\r\n                              {flightPlan[\"flight\"][\"arrivalAirport\"][\"city\"][\"name\"] }\r\n                              ,{\" \"}\r\n                              { flightPlan[\"flight\"][\"arrivalAirport\"][\"city\"][\"country\"][\"name\"]}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      data-dismiss=\"modal\"\r\n                      type=\"button\"\r\n                      onClick={() => this.showRoutes([])}\r\n                    >\r\n                      Cerrar\r\n                    </Button>\r\n                  </div>\r\n                </Modal>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Shipment;\r\n"]},"metadata":{},"sourceType":"module"}