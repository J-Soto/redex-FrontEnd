{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Ciclo9\\\\DP1\\\\Front-end\\\\redexfront\\\\redexfront\\\\src\\\\views\\\\examples\\\\Monitoring.js\";\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n// javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Bar } from \"react-chartjs-2\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactDatetime from \"react-datetime\"; // reactstrap components\n\nimport { Alert, Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, ListGroup, ListGroupItem, ListGroupItemHeading, InputGroupAddon, InputGroupText, InputGroup, Table } from \"reactstrap\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample3 } from \"variables/charts.js\";\nimport Header from \"components/Headers/Header.js\";\nimport APISimulation from \"./../../apis/APISimulation\";\nimport APIIncident from \"../../apis/APIIncident.js\";\nimport APIAirport from \"./../../apis/APIAirport.js\";\nimport APICountry from \"./../../apis/APICountry.js\";\nimport APICity from \"./../../apis/APICity.js\";\nvar serviceIncident = new APIIncident();\nvar serviceTimeline = new APISimulation();\nvar serviceCountry = new APICountry();\nvar serviceCity = new APICity();\nvar serviceAirport = new APIAirport();\nvar chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [{\n        ticks: {\n          callback: function callback(value) {\n            if (!(value % 10)) {\n              //return '$' + value + 'k'\n              return value;\n            }\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function label(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  }\n};\nvar useStyles = makeStyles({\n  root: {\n    width: 300\n  }\n});\n\nfunction valuetext(value) {\n  return \"\".concat(value, \"\\xB0C\");\n}\n\nvar ShippingMonitoring = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShippingMonitoring, _React$Component);\n\n  var _super = _createSuper(ShippingMonitoring);\n\n  function ShippingMonitoring(props) {\n    var _this;\n\n    _classCallCheck(this, ShippingMonitoring);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.transformDate = function (dateToTransform) {\n      var year = dateToTransform.getFullYear();\n      var month = dateToTransform.getMonth();\n\n      if (month < 10) {\n        month = \"0\" + (month + 1);\n      }\n\n      var date = dateToTransform.getDate();\n\n      if (date < 10) {\n        date = \"0\" + date;\n      }\n\n      var dateSend = year.toString() + month.toString() + date.toString();\n      return dateSend;\n    };\n\n    _this.simulatebyAirport = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var startDate, endDate, startDateT, endDateT, result, labelsChart4, dataChart4;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.startDate != null && _this.state.endDate != null && _this.state.airportId != 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              startDate = new Date(_this.state.startDate), endDate = new Date(_this.state.endDate);\n              startDateT = _this.transformDate(startDate);\n              endDateT = _this.transformDate(endDate);\n              _context.next = 6;\n              return serviceTimeline.getInformationAirport(_this.state.airportId, startDateT, endDateT, false);\n\n            case 6:\n              result = _context.sent;\n\n              if (result[\"estado\"].length < 3) {\n                labelsChart4 = [], dataChart4 = [];\n                result[\"resultado\"].map(function (day) {\n                  labelsChart4.push(day[\"ldate\"]);\n                  dataChart4.push(day[\"count\"]);\n                });\n\n                _this.setState({\n                  labelsChart4: labelsChart4,\n                  dataChart4: dataChart4\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleChangeCity = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var valueCity, airportResponse, airport;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                valueCity = event.target.value;\n\n                if (!(event.target.value != 0)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 4;\n                return serviceAirport.queryAirportByIdCity(event.target.value);\n\n              case 4:\n                airportResponse = _context2.sent;\n                airport = airportResponse[\"resultado\"];\n\n                _this.setState({\n                  city: valueCity,\n                  airportId: airport[\"id\"],\n                  airportName: airport[\"description\"]\n                });\n\n                _context2.next = 10;\n                break;\n\n              case 9:\n                _this.setState({\n                  city: 0,\n                  airportId: 0,\n                  airportName: \"Aeropuerto\"\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChangeCountry = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var idCountry, idCity, citiesA, cities;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                idCountry = event.target.value;\n\n                if (!(idCountry != 0)) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                idCity = sessionStorage.getItem(\"idCityAirport\");\n                _context3.next = 5;\n                return serviceCity.queryCitiesByIdCountry(idCountry, idCity);\n\n              case 5:\n                citiesA = _context3.sent;\n                cities = [];\n\n                if (citiesA[\"estado\"].length < 3) {\n                  cities.push(citiesA[\"resultado\"]);\n                }\n\n                _this.setState({\n                  country: idCountry,\n                  cities: cities\n                });\n\n                _context3.next = 12;\n                break;\n\n              case 11:\n                _this.setState({\n                  city: 0,\n                  airportId: 0,\n                  airportName: \"Aeropuerto\",\n                  country: 0\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.moreInformationWarehouse = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var resultIncident;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (_this.state.moreInfoWarehouses) {\n                _context4.next = 7;\n                break;\n              }\n\n              _context4.next = 3;\n              return serviceIncident.getDataAirports(false);\n\n            case 3:\n              resultIncident = _context4.sent;\n\n              if (resultIncident[\"estado\"].length < 3) {\n                _this.setState({\n                  infoWarehouses: resultIncident[\"resultado\"],\n                  moreInfoWarehouses: true\n                });\n              }\n\n              _context4.next = 8;\n              break;\n\n            case 7:\n              _this.setState({\n                moreInfoWarehouses: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.moreInformationFlights = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var resultIncident;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (_this.state.moreInfoFlights) {\n                _context5.next = 7;\n                break;\n              }\n\n              _context5.next = 3;\n              return serviceIncident.getDataFlights(false);\n\n            case 3:\n              resultIncident = _context5.sent;\n\n              if (resultIncident[\"estado\"].length < 3) {\n                _this.setState({\n                  infoFlights: resultIncident[\"resultado\"],\n                  moreInfoFlights: true\n                });\n              }\n\n              _context5.next = 8;\n              break;\n\n            case 7:\n              _this.setState({\n                moreInfoFlights: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.queryTimelineMoment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var year, month, date, hours, min, dateSend, hourSend, resultTimeline, dataChart1, labelsChart1, legendChart1;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(_this.state.queryDate != null)) {\n                _context6.next = 19;\n                break;\n              }\n\n              year = _this.state.queryDate.getFullYear();\n              month = _this.state.queryDate.getMonth();\n\n              if (month < 10) {\n                month = \"0\" + (month + 1);\n              } //console.log(month);\n\n\n              console.log(_this.state.queryDate.getDate());\n              date = _this.state.queryDate.getDate();\n\n              if (date < 10) {\n                date = \"0\" + date;\n              } //console.log(this.state.queryDate.getHours());\n\n\n              hours = _this.state.queryDate.getHours();\n\n              if (hours < 10) {\n                hours = \"0\" + hours;\n              } //console.log(hours);\n              //console.log(this.state.queryDate.getMinutes());\n\n\n              min = _this.state.queryDate.getMinutes();\n\n              if (min < 10) {\n                min = \"0\" + min;\n              }\n\n              dateSend = year.toString() + month.toString() + date.toString();\n              hourSend = hours.toString() + \":\" + min.toString(); //console.log(typeof dateSend);\n\n              _context6.next = 15;\n              return serviceTimeline.getTimeline(dateSend, hourSend, false);\n\n            case 15:\n              resultTimeline = _context6.sent;\n              //console.log(resultTimeline[\"resultado\"]);\n              dataChart1 = [], labelsChart1 = [], legendChart1 = [];\n\n              if (resultTimeline[\"estado\"].length < 3) {\n                resultTimeline[\"resultado\"].map(function (airport) {\n                  dataChart1.push(airport[\"percentage\"]);\n                  labelsChart1.push(airport[\"code\"]);\n                  legendChart1.push([airport[\"code\"], airport[\"city\"], airport[\"country\"]]);\n                }); //console.log(dataChart1);\n                //console.log(labelsChart1);\n\n                _this.setState({\n                  dataTimeLine: dataChart1,\n                  labelsTimeLine: labelsChart1\n                });\n              } else {\n                _this.setState({\n                  dataTimeLine: [0, 0, 0, 0, 0],\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\n                  legendTimeLine: [[\"A1\", \"C1\", \"P1\"], [\"A2\", \"C2\", \"P2\"], [\"A3\", \"C3\", \"P3\"], [\"A4\", \"C4\", \"P4\"], [\"A5\", \"C5\", \"P5\"]]\n                });\n              }\n\n              _this.setState({\n                queryTimeline: true\n              });\n\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var resultIncident, resultCountries, dataChart1, labelsChart1, legendChart1, dataChart2, labelsChart2, legendChart2;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return serviceIncident.getDashboards(false);\n\n            case 2:\n              resultIncident = _context7.sent;\n              _context7.next = 5;\n              return serviceCountry.queryAllCountries();\n\n            case 5:\n              resultCountries = _context7.sent;\n\n              if (resultCountries[\"estado\"].length < 3) {\n                _this.setState({\n                  countries: resultCountries[\"resultado\"]\n                });\n              }\n\n              dataChart1 = [], labelsChart1 = [], legendChart1 = [], dataChart2 = [], labelsChart2 = [], legendChart2 = [];\n\n              if (resultIncident[\"estado\"].length < 3) {\n                resultIncident[\"resultado\"][\"byairports\"].map(function (airport) {\n                  dataChart1.push(airport[\"count\"]);\n                  labelsChart1.push(airport[\"code\"]);\n                  legendChart1.push([airport[\"code\"], airport[\"city\"], airport[\"country\"]]);\n                });\n                resultIncident[\"resultado\"][\"byflightplans\"].map(function (flight) {\n                  dataChart2.push(flight[\"count\"]);\n                  labelsChart2.push(flight[\"idFlight\"]);\n                  legendChart2.push([flight[\"idFlight\"], flight[\"cityOrigin\"], flight[\"countryOrigin\"], flight[\"cityDestiny\"], flight[\"countryDestiny\"]]);\n                });\n\n                _this.setState({\n                  dataChart1: dataChart1,\n                  labelsChart1: labelsChart1,\n                  legendChart1: legendChart1,\n                  dataChart2: dataChart2,\n                  labelsChart2: labelsChart2,\n                  legendChart2: legendChart2\n                });\n              } else {\n                //si hay error porque no hay data\n                _this.setState({\n                  dataChart1: [0, 0, 0, 0, 0],\n                  labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\n                  legendChart1: [[\"A1\", \"C1\", \"P1\"], [\"A2\", \"C2\", \"P2\"], [\"A3\", \"C3\", \"P3\"], [\"A4\", \"C4\", \"P4\"], [\"A5\", \"C5\", \"P5\"]],\n                  dataChart2: [0, 0, 0, 0, 0],\n                  labelsChart2: [\"V1\", \"V2\", \"V3\", \"V4\", \"V5\"],\n                  legendChart2: [[\"V1\", \"OC1\", \"OP1\", \"DC1\", \"DP1\"], [\"V2\", \"OC2\", \"OP2\", \"DC2\", \"DP2\"], [\"V3\", \"OC3\", \"OP3\", \"DC3\", \"DP3\"], [\"V4\", \"OC4\", \"OP4\", \"DC4\", \"DP4\"], [\"V5\", \"OC5\", \"OP5\", \"DC5\", \"DP5\"]]\n                });\n              }\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    _this.state = {\n      dataChart1: [],\n      labelsChart1: [],\n      legendChart1: [],\n      legendTimeLine: [],\n      dataChart2: [],\n      labelsChart2: [],\n      legendChart2: [],\n      queryDate: null,\n      labelsTimeLine: [],\n      dataTimeLine: [],\n      maxTimeLine: [],\n      queryTimeline: false,\n      dataChart4: [],\n      labelsChart4: [],\n      moreInfoWarehouses: false,\n      moreInfoFlights: false,\n      infoWarehouses: [],\n      infoFlights: [],\n      country: 0,\n      countries: [],\n      city: 0,\n      cities: [],\n      airportName: \"Aeropuerto\",\n      airportId: 0,\n      startDate: null,\n      endDate: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleChangeCountry = _this.handleChangeCountry.bind(_assertThisInitialized(_this));\n    _this.handleChangeCity = _this.handleChangeCity.bind(_assertThisInitialized(_this));\n    _this.moreInformationWarehouse = _this.moreInformationWarehouse.bind(_assertThisInitialized(_this));\n    _this.moreInformationFlights = _this.moreInformationFlights.bind(_assertThisInitialized(_this));\n    _this.queryTimelineMoment = _this.queryTimelineMoment.bind(_assertThisInitialized(_this));\n    _this.simulatebyAirport = _this.simulatebyAirport.bind(_assertThisInitialized(_this));\n\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n\n    return _this;\n  }\n\n  _createClass(ShippingMonitoring, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      for (var i = 0; i < this.state.dataTimeLine.length; i++) {\n        this.state.maxTimeLine.push(100);\n      }\n\n      ;\n      var mixedChart = {\n        labels: this.state.labelsTimeLine,\n        datasets: [{\n          label: \"% Ocupado: \",\n          data: this.state.dataTimeLine\n        }, {\n          label: \"% Máximo: \",\n          data: this.state.maxTimeLine,\n          type: \"line\"\n        }]\n      };\n      var data1 = {\n        labels: this.state.labelsChart1,\n        datasets: [{\n          label: \"# Incidencias\",\n          data: this.state.dataChart1,\n          maxBarThickness: 10\n        }]\n      };\n      var data2 = {\n        labels: this.state.labelsChart2,\n        datasets: [{\n          label: \"# Incidencias\",\n          data: this.state.dataChart2,\n          maxBarThickness: 10\n        }]\n      };\n      var data4 = {\n        labels: this.state.labelsChart4,\n        datasets: [{\n          label: \"# Incidencias\",\n          data: this.state.dataChart4,\n          maxBarThickness: 10\n        }]\n      };\n      var countries = this.state.countries,\n          optionItems = [],\n          optionCities = [];\n\n      if (countries.length > 0) {\n        optionItems = countries.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: country[\"id\"],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 9\n            }\n          }, country[\"name\"]);\n        });\n      }\n\n      if (this.state.cities.length > 0) {\n        optionCities = this.state.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: city[\"id\"],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 9\n            }\n          }, city[\"name\"]);\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"bg-secondary shadow\",\n        style: {\n          width: \"80rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"bg-white border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"10\",\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }\n      }, \"Simulaci\\xF3n\")))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pl-lg-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }\n      }), this.state.queryTimeline && /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: mixedChart,\n        options: chartExample2.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItemHeading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 29\n        }\n      }, \"Aeropuertos\"), this.state.legendTimeLine.map(function (airport) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 41\n          }\n        }, airport[0], \": \", airport[1], \", \", airport[2]);\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        style: {\n          width: \"30%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }\n      }, \"Fecha\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: true,\n        onChange: function onChange(e) {\n          _this2.setState({\n            queryDate: new Date(e)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        outline: true,\n        type: \"button\",\n        onClick: this.queryTimelineMoment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-zoom-split-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 33\n        }\n      }))))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 23\n        }\n      }, \"TOP 5 Almacenes ocupados\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data1,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItemHeading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 27\n        }\n      }, \"Aeropuertos\"), this.state.legendChart1.map(function (airport) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 31\n          }\n        }, airport[0], \": \", airport[1], \", \", airport[2]);\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-3\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.moreInformationWarehouse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 27\n        }\n      }, \"Ver m\\xE1s\")))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }\n      }), this.state.moreInfoWarehouses ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 29\n        }\n      }, \"C\\xF3digo Aeropuerto\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 29\n        }\n      }, \"Ciudad, Pa\\xEDs\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 29\n        }\n      }, \"N\\xFAmero incidencias\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 25\n        }\n      }, this.state.infoWarehouses.map(function (warehouse) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: warehouse[\"code\"],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 33\n          }\n        }, warehouse[\"code\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 33\n          }\n        }, warehouse[\"city\"], \", \", warehouse[\"country\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 33\n          }\n        }, warehouse[\"count\"]));\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 21\n        }\n      })) : \"\", /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 23\n        }\n      }, \"TOP 5 Vuelos ocupados\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data2,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItemHeading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 27\n        }\n      }, \"Vuelos\"), this.state.legendChart2.map(function (flight) {\n        return /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 31\n          }\n        }, flight[0], \": \", flight[1], \", \", flight[2], \" - \", flight[3], \", \", flight[4]);\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-3\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.moreInformationFlights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 27\n        }\n      }, \"Ver m\\xE1s\")))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 21\n        }\n      }), this.state.moreInfoFlights ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"align-items-center table-flush\",\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"thead-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 29\n        }\n      }, \"C\\xF3digo Vuelo\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 29\n        }\n      }, \"Ciudad, Pa\\xEDs Origen\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 29\n        }\n      }, \"Ciudad, Pa\\xEDs Destino\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 29\n        }\n      }, \"N\\xFAmero incidencias\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 25\n        }\n      }, this.state.infoFlights.map(function (flight) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: flight[\"idFlight\"],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 33\n          }\n        }, flight[\"idFlight\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 33\n          }\n        }, flight[\"cityOrigin\"], \", \", flight[\"countryOrigin\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 33\n          }\n        }, flight[\"cityDestiny\"], \", \", flight[\"countryDestiny\"]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 33\n          }\n        }, flight[\"count\"]));\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }\n      })) : \"\", /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 27\n        }\n      }, \"D\\xEDas de incidencias por aeropuerto\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"input-destinatioCountry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 29\n        }\n      }, \"Pa\\xEDs\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"form-control-alternative\",\n        type: \"select\",\n        placeholder: \"Pa\\xEDs\",\n        name: \"select\",\n        id: \"input-destinationCountry\",\n        value: this.state.country,\n        onChange: function onChange(ev) {\n          _this2.handleChangeCountry(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 31\n        }\n      }, \"Selecciona un pa\\xEDs\"), optionItems))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"input-destinationCity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 29\n        }\n      }, \"Ciudad\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"form-control-alternative\",\n        type: \"select\",\n        placeholder: \"Ciudad\",\n        name: \"select\",\n        id: \"input-destinationCity\",\n        value: this.state.city,\n        onChange: function onChange(ev) {\n          _this2.handleChangeCity(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 31\n        }\n      }, \"Seleccionar ciudad\"), optionCities))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"input-destinationAirport\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 29\n        }\n      }, \"Aeropuerto\"), /*#__PURE__*/React.createElement(Input, {\n        disabled: true,\n        className: \"form-control-alternative\",\n        id: \"input-destinationAirport\",\n        placeholder: \"Aeropuerto destino\",\n        type: \"text\",\n        value: this.state.airportName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 29\n        }\n      }, \"Fecha de inicio\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 35\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: false,\n        renderDay: function renderDay(props, currentDate, selectedDate) {\n          var classes = props.className;\n\n          if (_this2.state.startDate && _this2.state.endDate && _this2.state.startDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" start-date\";\n          } else if (_this2.state.startDate && _this2.state.endDate && new Date(_this2.state.startDate._d + \"\") < new Date(currentDate._d + \"\") && new Date(_this2.state.endDate._d + \"\") > new Date(currentDate._d + \"\")) {\n            classes += \" middle-date\";\n          } else if (_this2.state.endDate && _this2.state.endDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" end-date\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, props, {\n            className: classes,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 37\n            }\n          }), currentDate.date());\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            startDate: e\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 31\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        lg: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 29\n        }\n      }, \"Fecha de fin\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 35\n        }\n      }))), /*#__PURE__*/React.createElement(ReactDatetime, {\n        inputProps: {\n          placeholder: \"Seleccionar fecha\"\n        },\n        timeFormat: false,\n        renderDay: function renderDay(props, currentDate, selectedDate) {\n          var classes = props.className;\n\n          if (_this2.state.startDate && _this2.state.endDate && _this2.state.startDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" start-date\";\n          } else if (_this2.state.startDate && _this2.state.endDate && new Date(_this2.state.startDate._d + \"\") < new Date(currentDate._d + \"\") && new Date(_this2.state.endDate._d + \"\") > new Date(currentDate._d + \"\")) {\n            classes += \" middle-date\";\n          } else if (_this2.state.endDate && _this2.state.endDate._d + \"\" === currentDate._d + \"\") {\n            classes += \" end-date\";\n          }\n\n          return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, props, {\n            className: classes,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 37\n            }\n          }), currentDate.date());\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            endDate: e\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 31\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-icon btn-3\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.simulatebyAirport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-play-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"btn-inner--text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 29\n        }\n      }, \"Simular\")))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: data4,\n        options: chartExample3.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 33\n        }\n      })))))))))));\n    }\n  }]);\n\n  return ShippingMonitoring;\n}(React.Component);\n\nexport default ShippingMonitoring;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Ciclo9/DP1/Front-end/redexfront/redexfront/src/views/examples/Monitoring.js"],"names":["React","Chart","Bar","Slider","makeStyles","Typography","ReactDatetime","Alert","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","Container","Row","Col","ListGroup","ListGroupItem","ListGroupItemHeading","InputGroupAddon","InputGroupText","InputGroup","Table","chartOptions","parseOptions","chartExample1","chartExample3","Header","APISimulation","APIIncident","APIAirport","APICountry","APICity","serviceIncident","serviceTimeline","serviceCountry","serviceCity","serviceAirport","chartExample2","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","useStyles","root","width","valuetext","ShippingMonitoring","props","handleChange","event","setState","target","name","transformDate","dateToTransform","year","getFullYear","month","getMonth","date","getDate","dateSend","toString","simulatebyAirport","state","startDate","endDate","airportId","Date","startDateT","endDateT","getInformationAirport","result","labelsChart4","dataChart4","map","day","push","handleChangeCity","valueCity","queryAirportByIdCity","airportResponse","airport","city","airportName","handleChangeCountry","idCountry","idCity","sessionStorage","getItem","queryCitiesByIdCountry","citiesA","cities","country","moreInformationWarehouse","moreInfoWarehouses","getDataAirports","resultIncident","infoWarehouses","moreInformationFlights","moreInfoFlights","getDataFlights","infoFlights","queryTimelineMoment","queryDate","console","log","hours","getHours","min","getMinutes","hourSend","getTimeline","resultTimeline","dataChart1","labelsChart1","legendChart1","dataTimeLine","labelsTimeLine","legendTimeLine","queryTimeline","componentWillMount","getDashboards","queryAllCountries","resultCountries","countries","dataChart2","labelsChart2","legendChart2","flight","maxTimeLine","bind","window","i","mixedChart","labels","type","data1","maxBarThickness","data2","data4","optionItems","optionCities","placeholder","e","warehouse","ev","currentDate","selectedDate","classes","className","_d","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CAEA;;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,KARF,EASEC,SATF,EAUEC,GAVF,EAWEC,GAXF,EAYEC,SAZF,EAaEC,aAbF,EAcEC,oBAdF,EAeEC,eAfF,EAgBEC,cAhBF,EAiBEC,UAjBF,EAkBEC,KAlBF,QAmBO,YAnBP,C,CAoBA;;AAEA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,aAJF,QAKO,qBALP;AAMA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,IAAMC,eAAe,GAAG,IAAIJ,WAAJ,EAAxB;AACA,IAAMK,eAAe,GAAG,IAAIN,aAAJ,EAAxB;AACA,IAAMO,cAAc,GAAG,IAAIJ,UAAJ,EAAvB;AACA,IAAMK,WAAW,GAAG,IAAIJ,OAAJ,EAApB;AACA,IAAMK,cAAc,GAAG,IAAIP,UAAJ,EAAvB;AAGA,IAAIQ,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,kBAAUC,KAAV,EAAiB;AACzB,gBAAI,EAAEA,KAAK,GAAG,EAAV,CAAJ,EAAmB;AACjB;AACA,qBAAOA,KAAP;AACD;AACF;AANI;AADT,OADK;AADD,KADD;AAePC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,eAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC3B,cAAIF,KAAK,GAAGE,IAAI,CAACC,QAAL,CAAcF,IAAI,CAACG,YAAnB,EAAiCJ,KAAjC,IAA0C,EAAtD;AACA,cAAIK,MAAM,GAAGJ,IAAI,CAACI,MAAlB;AACA,cAAIC,OAAO,GAAG,EAAd;;AACA,cAAIJ,IAAI,CAACC,QAAL,CAAcI,MAAd,GAAuB,CAA3B,EAA8B;AAC5BD,YAAAA,OAAO,IAAIN,KAAX;AACD;;AACDM,UAAAA,OAAO,IAAID,MAAX;AACA,iBAAOC,OAAP;AACD;AAVQ;AADH;AAfH;AADS,CAApB;AAgCA,IAAME,SAAS,GAAGrD,UAAU,CAAC;AAC3BsD,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADqB,CAAD,CAA5B;;AAMA,SAASC,SAAT,CAAmBd,KAAnB,EAA0B;AACxB,mBAAUA,KAAV;AACD;;IAEKe,kB;;;;;AACJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA4CnBC,YA5CmB,GA4CJ,UAACC,KAAD,EAAW;AACxB,YAAKC,QAAL,qBACGD,KAAK,CAACE,MAAN,CAAaC,IADhB,EACuBH,KAAK,CAACE,MAAN,CAAapB,KADpC;AAGD,KAhDkB;;AAAA,UAkDnBsB,aAlDmB,GAkDH,UAACC,eAAD,EAAmB;AACjC,UAAIC,IAAI,GAAGD,eAAe,CAACE,WAAhB,EAAX;AACA,UAAIC,KAAK,GAAGH,eAAe,CAACI,QAAhB,EAAZ;;AACA,UAAID,KAAK,GAAG,EAAZ,EAAgB;AACZA,QAAAA,KAAK,GAAG,OAAOA,KAAK,GAAG,CAAf,CAAR;AACH;;AACD,UAAIE,IAAI,GAAGL,eAAe,CAACM,OAAhB,EAAX;;AACE,UAAID,IAAI,GAAG,EAAX,EAAe;AACbA,QAAAA,IAAI,GAAG,MAAMA,IAAb;AACD;;AACH,UAAIE,QAAQ,GAAGN,IAAI,CAACO,QAAL,KAAkBL,KAAK,CAACK,QAAN,EAAlB,GAAqCH,IAAI,CAACG,QAAL,EAApD;AACA,aAAOD,QAAP;AACD,KA9DkB;;AAAA,UA+DnBE,iBA/DmB,yEA+DC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACd,MAAKC,KAAL,CAAWC,SAAX,IAAsB,IAAtB,IAA8B,MAAKD,KAAL,CAAWE,OAAX,IAAoB,IAAlD,IAA0D,MAAKF,KAAL,CAAWG,SAAX,IAAsB,CADlE;AAAA;AAAA;AAAA;;AAEZF,cAAAA,SAFY,GAEF,IAAIG,IAAJ,CAAS,MAAKJ,KAAL,CAAWC,SAApB,CAFE,EAE8BC,OAF9B,GAEuC,IAAIE,IAAJ,CAAS,MAAKJ,KAAL,CAAWE,OAApB,CAFvC;AAGZG,cAAAA,UAHY,GAGD,MAAKhB,aAAL,CAAmBY,SAAnB,CAHC;AAIZK,cAAAA,QAJY,GAIH,MAAKjB,aAAL,CAAmBa,OAAnB,CAJG;AAAA;AAAA,qBAKK7C,eAAe,CAACkD,qBAAhB,CAAsC,MAAKP,KAAL,CAAWG,SAAjD,EAA2DE,UAA3D,EAAsEC,QAAtE,EAAgF,KAAhF,CALL;;AAAA;AAKVE,cAAAA,MALU;;AAMhB,kBAAIA,MAAM,CAAC,QAAD,CAAN,CAAiB/B,MAAjB,GAAwB,CAA5B,EAA8B;AACxBgC,gBAAAA,YADwB,GACX,EADW,EACRC,UADQ,GACG,EADH;AAE5BF,gBAAAA,MAAM,CAAC,WAAD,CAAN,CAAoBG,GAApB,CAAwB,UAACC,GAAD,EAAO;AAC7BH,kBAAAA,YAAY,CAACI,IAAb,CAAkBD,GAAG,CAAC,OAAD,CAArB;AACAF,kBAAAA,UAAU,CAACG,IAAX,CAAgBD,GAAG,CAAC,OAAD,CAAnB;AACD,iBAHD;;AAIA,sBAAK1B,QAAL,CAAc;AACZuB,kBAAAA,YAAY,EAAEA,YADF;AAEZC,kBAAAA,UAAU,EAACA;AAFC,iBAAd;AAID;;AAhBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/DD;;AAAA,UAkFnBI,gBAlFmB;AAAA,2EAkFA,kBAAO7B,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACb8B,gBAAAA,SADa,GACD9B,KAAK,CAACE,MAAN,CAAapB,KADZ;;AAAA,sBAEbkB,KAAK,CAACE,MAAN,CAAapB,KAAb,IAAsB,CAFT;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGeP,cAAc,CAACwD,oBAAf,CAC5B/B,KAAK,CAACE,MAAN,CAAapB,KADe,CAHf;;AAAA;AAGTkD,gBAAAA,eAHS;AAMXC,gBAAAA,OANW,GAMDD,eAAe,CAAC,WAAD,CANd;;AAOf,sBAAK/B,QAAL,CACE;AACEiC,kBAAAA,IAAI,EAAEJ,SADR;AAEEZ,kBAAAA,SAAS,EAAEe,OAAO,CAAC,IAAD,CAFpB;AAGEE,kBAAAA,WAAW,EAAEF,OAAO,CAAC,aAAD;AAHtB,iBADF;;AAPe;AAAA;;AAAA;AAef,sBAAKhC,QAAL,CACE;AACEiC,kBAAAA,IAAI,EAAE,CADR;AAEEhB,kBAAAA,SAAS,EAAE,CAFb;AAGEiB,kBAAAA,WAAW,EAAE;AAHf,iBADF;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlFA;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA0GnBC,mBA1GmB;AAAA,2EA0GG,kBAAOpC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBqC,gBAAAA,SADgB,GACJrC,KAAK,CAACE,MAAN,CAAapB,KADT;;AAAA,sBAEhBuD,SAAS,IAAI,CAFG;AAAA;AAAA;AAAA;;AAGdC,gBAAAA,MAHc,GAGLC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAHK;AAAA;AAAA,uBAIIlE,WAAW,CAACmE,sBAAZ,CACpBJ,SADoB,EACTC,MADS,CAJJ;;AAAA;AAIZI,gBAAAA,OAJY;AAOdC,gBAAAA,MAPc,GAOL,EAPK;;AAQlB,oBAAID,OAAO,CAAC,QAAD,CAAP,CAAkBlD,MAAlB,GAAyB,CAA7B,EAA+B;AAC7BmD,kBAAAA,MAAM,CAACf,IAAP,CAAYc,OAAO,CAAC,WAAD,CAAnB;AACD;;AACD,sBAAKzC,QAAL,CAAc;AACZ2C,kBAAAA,OAAO,EAAEP,SADG;AAEZM,kBAAAA,MAAM,EAAEA;AAFI,iBAAd;;AAXkB;AAAA;;AAAA;AAiBlB,sBAAK1C,QAAL,CAAc;AACZiC,kBAAAA,IAAI,EAAE,CADM;AAEZhB,kBAAAA,SAAS,EAAE,CAFC;AAGZiB,kBAAAA,WAAW,EAAE,YAHD;AAIZS,kBAAAA,OAAO,EAAE;AAJG,iBAAd;;AAjBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA1GH;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAoInBC,wBApImB,yEAoIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACrB,MAAK9B,KAAL,CAAW+B,kBADU;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEM3E,eAAe,CAAC4E,eAAhB,CAAgC,KAAhC,CAFN;;AAAA;AAEjBC,cAAAA,cAFiB;;AAGvB,kBAAIA,cAAc,CAAC,QAAD,CAAd,CAAyBxD,MAAzB,GAAgC,CAApC,EAAsC;AACpC,sBAAKS,QAAL,CAAc;AACZgD,kBAAAA,cAAc,EAACD,cAAc,CAAC,WAAD,CADjB;AAEZF,kBAAAA,kBAAkB,EAAE;AAFR,iBAAd;AAID;;AARsB;AAAA;;AAAA;AAWvB,oBAAK7C,QAAL,CAAc;AACZ6C,gBAAAA,kBAAkB,EAAE;AADR,eAAd;;AAXuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApIR;AAAA,UAqJnBI,sBArJmB,yEAqJM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClB,MAAKnC,KAAL,CAAWoC,eADO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEQhF,eAAe,CAACiF,cAAhB,CAA+B,KAA/B,CAFR;;AAAA;AAEfJ,cAAAA,cAFe;;AAGrB,kBAAIA,cAAc,CAAC,QAAD,CAAd,CAAyBxD,MAAzB,GAAgC,CAApC,EAAsC;AACpC,sBAAKS,QAAL,CAAc;AACZoD,kBAAAA,WAAW,EAACL,cAAc,CAAC,WAAD,CADd;AAEZG,kBAAAA,eAAe,EAAE;AAFL,iBAAd;AAID;;AARoB;AAAA;;AAAA;AAWrB,oBAAKlD,QAAL,CAAc;AACZkD,gBAAAA,eAAe,EAAE;AADL,eAAd;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArJN;AAAA,UAqKnBG,mBArKmB,yEAqKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAChB,MAAKvC,KAAL,CAAWwC,SAAX,IAAwB,IADR;AAAA;AAAA;AAAA;;AAEdjD,cAAAA,IAFc,GAEP,MAAKS,KAAL,CAAWwC,SAAX,CAAqBhD,WAArB,EAFO;AAGdC,cAAAA,KAHc,GAGN,MAAKO,KAAL,CAAWwC,SAAX,CAAqB9C,QAArB,EAHM;;AAIlB,kBAAID,KAAK,GAAG,EAAZ,EAAgB;AACdA,gBAAAA,KAAK,GAAG,OAAOA,KAAK,GAAG,CAAf,CAAR;AACD,eANiB,CAOlB;;;AAEAgD,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAK1C,KAAL,CAAWwC,SAAX,CAAqB5C,OAArB,EAAZ;AACID,cAAAA,IAVc,GAUP,MAAKK,KAAL,CAAWwC,SAAX,CAAqB5C,OAArB,EAVO;;AAWlB,kBAAID,IAAI,GAAG,EAAX,EAAe;AACbA,gBAAAA,IAAI,GAAG,MAAMA,IAAb;AACD,eAbiB,CAelB;;;AACIgD,cAAAA,KAhBc,GAgBN,MAAK3C,KAAL,CAAWwC,SAAX,CAAqBI,QAArB,EAhBM;;AAiBlB,kBAAID,KAAK,GAAG,EAAZ,EAAgB;AACdA,gBAAAA,KAAK,GAAG,MAAMA,KAAd;AACD,eAnBiB,CAoBlB;AAEA;;;AACIE,cAAAA,GAvBc,GAuBR,MAAK7C,KAAL,CAAWwC,SAAX,CAAqBM,UAArB,EAvBQ;;AAwBlB,kBAAID,GAAG,GAAG,EAAV,EAAc;AACZA,gBAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AACGhD,cAAAA,QA3Bc,GA2BHN,IAAI,CAACO,QAAL,KAAkBL,KAAK,CAACK,QAAN,EAAlB,GAAqCH,IAAI,CAACG,QAAL,EA3BlC;AA4BdiD,cAAAA,QA5Bc,GA4BHJ,KAAK,CAAC7C,QAAN,KAAmB,GAAnB,GAAyB+C,GAAG,CAAC/C,QAAJ,EA5BtB,EA6BlB;;AA7BkB;AAAA,qBA+BWzC,eAAe,CAAC2F,WAAhB,CAC3BnD,QAD2B,EAE3BkD,QAF2B,EAG3B,KAH2B,CA/BX;;AAAA;AA+BZE,cAAAA,cA/BY;AAoClB;AACIC,cAAAA,UArCc,GAqCD,EArCC,EAsChBC,YAtCgB,GAsCD,EAtCC,EAuChBC,YAvCgB,GAuCF,EAvCE;;AAwClB,kBAAIH,cAAc,CAAC,QAAD,CAAd,CAAyBxE,MAAzB,GAAkC,CAAtC,EAAyC;AACvCwE,gBAAAA,cAAc,CAAC,WAAD,CAAd,CAA4BtC,GAA5B,CAAgC,UAACO,OAAD,EAAa;AAC3CgC,kBAAAA,UAAU,CAACrC,IAAX,CAAgBK,OAAO,CAAC,YAAD,CAAvB;AACAiC,kBAAAA,YAAY,CAACtC,IAAb,CAAkBK,OAAO,CAAC,MAAD,CAAzB;AACAkC,kBAAAA,YAAY,CAACvC,IAAb,CAAkB,CAACK,OAAO,CAAC,MAAD,CAAR,EAAiBA,OAAO,CAAC,MAAD,CAAxB,EAAiCA,OAAO,CAAC,SAAD,CAAxC,CAAlB;AACD,iBAJD,EADuC,CAMvC;AACA;;AACA,sBAAKhC,QAAL,CAAc;AACZmE,kBAAAA,YAAY,EAAEH,UADF;AAEZI,kBAAAA,cAAc,EAAEH;AAFJ,iBAAd;AAID,eAZD,MAYO;AACL,sBAAKjE,QAAL,CAAc;AACZmE,kBAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADF;AAEZF,kBAAAA,YAAY,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAFF;AAGZI,kBAAAA,cAAc,EAAC,CAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAD,EAAkB,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAlB,EAAmC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAnC,EAAoD,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAApD,EAAqE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAArE;AAHH,iBAAd;AAKD;;AACD,oBAAKrE,QAAL,CAAc;AAAEsE,gBAAAA,aAAa,EAAE;AAAjB,eAAd;;AA3DkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArKH;AAAA,UAoOnBC,kBApOmB,yEAoOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUrG,eAAe,CAACsG,aAAhB,CAA8B,KAA9B,CADV;;AAAA;AACbzB,cAAAA,cADa;AAAA;AAAA,qBAEW3E,cAAc,CAACqG,iBAAf,EAFX;;AAAA;AAEbC,cAAAA,eAFa;;AAGnB,kBAAIA,eAAe,CAAC,QAAD,CAAf,CAA0BnF,MAA1B,GAAiC,CAArC,EAAuC;AACrC,sBAAKS,QAAL,CAAc;AAAC2E,kBAAAA,SAAS,EAACD,eAAe,CAAC,WAAD;AAA1B,iBAAd;AACD;;AACGV,cAAAA,UANe,GAMF,EANE,EAOjBC,YAPiB,GAOF,EAPE,EAQjBC,YARiB,GAQF,EARE,EASjBU,UATiB,GASJ,EATI,EAUjBC,YAViB,GAUF,EAVE,EAWjBC,YAXiB,GAWF,EAXE;;AAYnB,kBAAI/B,cAAc,CAAC,QAAD,CAAd,CAAyBxD,MAAzB,GAAkC,CAAtC,EAAyC;AACvCwD,gBAAAA,cAAc,CAAC,WAAD,CAAd,CAA4B,YAA5B,EAA0CtB,GAA1C,CAA8C,UAACO,OAAD,EAAa;AACzDgC,kBAAAA,UAAU,CAACrC,IAAX,CAAgBK,OAAO,CAAC,OAAD,CAAvB;AACAiC,kBAAAA,YAAY,CAACtC,IAAb,CAAkBK,OAAO,CAAC,MAAD,CAAzB;AACAkC,kBAAAA,YAAY,CAACvC,IAAb,CAAkB,CAACK,OAAO,CAAC,MAAD,CAAR,EAAiBA,OAAO,CAAC,MAAD,CAAxB,EAAiCA,OAAO,CAAC,SAAD,CAAxC,CAAlB;AACD,iBAJD;AAKAe,gBAAAA,cAAc,CAAC,WAAD,CAAd,CAA4B,eAA5B,EAA6CtB,GAA7C,CAAiD,UAACsD,MAAD,EAAY;AAC3DH,kBAAAA,UAAU,CAACjD,IAAX,CAAgBoD,MAAM,CAAC,OAAD,CAAtB;AACAF,kBAAAA,YAAY,CAAClD,IAAb,CAAkBoD,MAAM,CAAC,UAAD,CAAxB;AACAD,kBAAAA,YAAY,CAACnD,IAAb,CAAkB,CAACoD,MAAM,CAAC,UAAD,CAAP,EAAoBA,MAAM,CAAC,YAAD,CAA1B,EAAyCA,MAAM,CAAC,eAAD,CAA/C,EAAiEA,MAAM,CAAC,aAAD,CAAvE,EAAuFA,MAAM,CAAC,gBAAD,CAA7F,CAAlB;AACD,iBAJD;;AAMA,sBAAK/E,QAAL,CAAc;AACZgE,kBAAAA,UAAU,EAAEA,UADA;AAEZC,kBAAAA,YAAY,EAAEA,YAFF;AAGZC,kBAAAA,YAAY,EAAEA,YAHF;AAIZU,kBAAAA,UAAU,EAAEA,UAJA;AAKZC,kBAAAA,YAAY,EAAEA,YALF;AAMZC,kBAAAA,YAAY,EAAEA;AANF,iBAAd;AAQD,eApBD,MAoBO;AACL;AACA,sBAAK9E,QAAL,CAAc;AACZgE,kBAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADA;AAEZC,kBAAAA,YAAY,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAFF;AAGZC,kBAAAA,YAAY,EAAC,CAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAD,EAAkB,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAlB,EAAmC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAnC,EAAoD,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAApD,EAAqE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAArE,CAHD;AAIZU,kBAAAA,UAAU,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAJC;AAKZC,kBAAAA,YAAY,EAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,CALD;AAMZC,kBAAAA,YAAY,EAAC,CAAC,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,EAAkB,KAAlB,EAAwB,KAAxB,CAAD,EAAgC,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,EAAkB,KAAlB,EAAwB,KAAxB,CAAhC,EAA+D,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,EAAkB,KAAlB,EAAwB,KAAxB,CAA/D,EAA8F,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,EAAkB,KAAlB,EAAwB,KAAxB,CAA9F,EAA6H,CAAC,IAAD,EAAM,KAAN,EAAY,KAAZ,EAAkB,KAAlB,EAAwB,KAAxB,CAA7H;AAND,iBAAd;AASD;;AA3CkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApOF;AAEjB,UAAKhE,KAAL,GAAa;AACXkD,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXG,MAAAA,cAAc,EAAE,EAJL;AAKXO,MAAAA,UAAU,EAAE,EALD;AAMXC,MAAAA,YAAY,EAAE,EANH;AAOXC,MAAAA,YAAY,EAAE,EAPH;AAQXxB,MAAAA,SAAS,EAAE,IARA;AASXc,MAAAA,cAAc,EAAE,EATL;AAUXD,MAAAA,YAAY,EAAE,EAVH;AAWXa,MAAAA,WAAW,EAAE,EAXF;AAYXV,MAAAA,aAAa,EAAE,KAZJ;AAaX9C,MAAAA,UAAU,EAAC,EAbA;AAcXD,MAAAA,YAAY,EAAC,EAdF;AAeXsB,MAAAA,kBAAkB,EAAE,KAfT;AAgBXK,MAAAA,eAAe,EAAE,KAhBN;AAiBXF,MAAAA,cAAc,EAAE,EAjBL;AAkBXI,MAAAA,WAAW,EAAE,EAlBF;AAmBXT,MAAAA,OAAO,EAAE,CAnBE;AAoBXgC,MAAAA,SAAS,EAAE,EApBA;AAqBX1C,MAAAA,IAAI,EAAC,CArBM;AAsBXS,MAAAA,MAAM,EAAC,EAtBI;AAuBXR,MAAAA,WAAW,EAAE,YAvBF;AAwBXjB,MAAAA,SAAS,EAAE,CAxBA;AAyBXF,MAAAA,SAAS,EAAE,IAzBA;AA0BXC,MAAAA,OAAO,EAAE;AA1BE,KAAb;AA4BA,UAAKlB,YAAL,GAAoB,MAAKA,YAAL,CAAkBmF,IAAlB,+BAApB;AACA,UAAK9C,mBAAL,GAA2B,MAAKA,mBAAL,CAAyB8C,IAAzB,+BAA3B;AACA,UAAKrD,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBqD,IAAtB,+BAAxB;AACA,UAAKrC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BqC,IAA9B,+BAAhC;AACA,UAAKhC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BgC,IAA5B,+BAA9B;AACA,UAAK5B,mBAAL,GAA2B,MAAKA,mBAAL,CAAyB4B,IAAzB,+BAA3B;AACA,UAAKpE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBoE,IAAvB,+BAAzB;;AAGA,QAAIC,MAAM,CAAClJ,KAAX,EAAkB;AAChByB,MAAAA,YAAY,CAACzB,KAAD,EAAQwB,YAAY,EAApB,CAAZ;AACD;;AAzCgB;AA0ClB;;;;6BAwOQ;AAAA;;AACP,WAAK,IAAI2H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrE,KAAL,CAAWqD,YAAX,CAAwB5E,MAA5C,EAAoD4F,CAAC,EAArD,EAAyD;AACvD,aAAKrE,KAAL,CAAWkE,WAAX,CAAuBrD,IAAvB,CAA4B,GAA5B;AACD;;AAAA;AACD,UAAIyD,UAAU,GAAG;AACfC,QAAAA,MAAM,EAAE,KAAKvE,KAAL,CAAWsD,cADJ;AAEfjF,QAAAA,QAAQ,EAAE,CACR;AACEH,UAAAA,KAAK,EAAE,aADT;AAEEE,UAAAA,IAAI,EAAE,KAAK4B,KAAL,CAAWqD;AAFnB,SADQ,EAKR;AACEnF,UAAAA,KAAK,EAAE,YADT;AAEEE,UAAAA,IAAI,EAAE,KAAK4B,KAAL,CAAWkE,WAFnB;AAGEM,UAAAA,IAAI,EAAE;AAHR,SALQ;AAFK,OAAjB;AAcA,UAAIC,KAAK,GAAG;AACVF,QAAAA,MAAM,EAAE,KAAKvE,KAAL,CAAWmD,YADT;AAEV9E,QAAAA,QAAQ,EAAE,CACR;AACEH,UAAAA,KAAK,EAAG,eADV;AAEEE,UAAAA,IAAI,EAAE,KAAK4B,KAAL,CAAWkD,UAFnB;AAGEwB,UAAAA,eAAe,EAAE;AAHnB,SADQ;AAFA,OAAZ;AAUA,UAAIC,KAAK,GAAG;AACVJ,QAAAA,MAAM,EAAE,KAAKvE,KAAL,CAAW+D,YADT;AAEV1F,QAAAA,QAAQ,EAAE,CACR;AACEH,UAAAA,KAAK,EAAG,eADV;AAEEE,UAAAA,IAAI,EAAE,KAAK4B,KAAL,CAAW8D,UAFnB;AAGEY,UAAAA,eAAe,EAAE;AAHnB,SADQ;AAFA,OAAZ;AAUA,UAAIE,KAAK,GAAC;AACRL,QAAAA,MAAM,EAAE,KAAKvE,KAAL,CAAWS,YADX;AAENpC,QAAAA,QAAQ,EAAE,CACR;AACEH,UAAAA,KAAK,EAAE,eADT;AAEEE,UAAAA,IAAI,EAAC,KAAK4B,KAAL,CAAWU,UAFlB;AAGEgE,UAAAA,eAAe,EAAE;AAHnB,SADQ;AAFJ,OAAV;AAWA,UAAIb,SAAS,GAAG,KAAK7D,KAAL,CAAW6D,SAA3B;AAAA,UAAsCgB,WAAW,GAAG,EAApD;AAAA,UAAwDC,YAAY,GAAG,EAAvE;;AACA,UAAIjB,SAAS,CAACpF,MAAV,GAAmB,CAAvB,EAA0B;AACxBoG,QAAAA,WAAW,GAAGhB,SAAS,CAAClD,GAAV,CAAc,UAACkB,OAAD;AAAA,8BAC1B;AAAQ,YAAA,KAAK,EAAEA,OAAO,CAAC,IAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BA,OAAO,CAAC,MAAD,CAAtC,CAD0B;AAAA,SAAd,CAAd;AAGD;;AACD,UAAI,KAAK7B,KAAL,CAAW4B,MAAX,CAAkBnD,MAAlB,GAA2B,CAA/B,EAAkC;AAChCqG,QAAAA,YAAY,GAAG,KAAK9E,KAAL,CAAW4B,MAAX,CAAkBjB,GAAlB,CAAsB,UAACQ,IAAD;AAAA,8BACnC;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAAC,IAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4BA,IAAI,CAAC,MAAD,CAAhC,CADmC;AAAA,SAAtB,CAAf;AAGD;;AAGD,0BACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,OAArB;AAA6B,QAAA,KAAK,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAsC,QAAA,KAAK,EAAE;AAAEvC,UAAAA,KAAK,EAAE;AAAT,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CADF,CADF,eAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKoB,KAAL,CAAWwD,aAAX,iBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AACE,QAAA,IAAI,EAAEc,UADR;AAEE,QAAA,OAAO,EAAE7G,aAAa,CAACC,OAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eASE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEW,KAAKsC,KAAL,CAAWuD,cAAX,CAA0B5C,GAA1B,CAA8B,UAACO,OAAD,EAAW;AACtC,4BACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBA,OAAO,CAAC,CAAD,CAAvB,QAA8BA,OAAO,CAAC,CAAD,CAArC,QAA4CA,OAAO,CAAC,CAAD,CAAnD,CADA;AAGX,OAJQ,CAFX,CADF,CATF,CAHJ,eAwBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEtC,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE;AACVmG,UAAAA,WAAW,EAAE;AADH,SADd;AAIE,QAAA,UAAU,EAAE,IAJd;AAKE,QAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACf,UAAA,MAAI,CAAC9F,QAAL,CAAc;AAAEsD,YAAAA,SAAS,EAAE,IAAIpC,IAAJ,CAAS4E,CAAT;AAAb,WAAd;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,eAeE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,MAHT;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAE,KAAKzC,mBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF,CAfF,CAFF,CADF,CAxBF,eA0DE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CA1DF,eA6DE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAEkC,KAAX;AAAkB,QAAA,OAAO,EAAE5H,aAAa,CAACa,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEG,KAAKsC,KAAL,CAAWoD,YAAX,CAAwBzC,GAAxB,CAA4B,UAACO,OAAD,EAAW;AACtC,4BACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBA,OAAO,CAAC,CAAD,CAAvB,QAA8BA,OAAO,CAAC,CAAD,CAArC,QAA4CA,OAAO,CAAC,CAAD,CAAnD,CADF;AAGD,OAJA,CAFH,CADF,CANF,CA7DF,eA8EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9EF,eA+EE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE,KAAKY,wBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,eASE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF,CADF,CA/EF,eA8FE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9FF,EA+FG,KAAK9B,KAAL,CAAW+B,kBAAX,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gCAAjB;AAAkD,QAAA,UAAU,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAGE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK/B,KAAL,CAAWkC,cAAX,CAA0BvB,GAA1B,CAA8B,UAACsE,SAAD,EAAe;AAC5C,4BACE;AAAI,UAAA,GAAG,EAAEA,SAAS,CAAC,MAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,SAAS,CAAC,MAAD,CAAd,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,SAAS,CAAC,MAAD,CAAd,QAA0BA,SAAS,CAAC,SAAD,CAAnC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,SAAS,CAAC,OAAD,CAAd,CAHF,CADF;AAOD,OARA,CADH,CARF,CADF,CADA,eAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBA,CADC,GA0BE,EAzHL,eA0HE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CA1HF,eA6HE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAEN,KAAX;AAAkB,QAAA,OAAO,EAAE9H,aAAa,CAACa,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKsC,KAAL,CAAWgE,YAAX,CAAwBrD,GAAxB,CAA4B,UAACsD,MAAD,EAAY;AACvC,4BACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBA,MAAM,CAAC,CAAD,CAAtB,QAA6BA,MAAM,CAAC,CAAD,CAAnC,QAA0CA,MAAM,CAAC,CAAD,CAAhD,SAAwDA,MAAM,CAAC,CAAD,CAA9D,QAAqEA,MAAM,CAAC,CAAD,CAA3E,CADF;AAGD,OAJA,CAFH,CADF,CANF,CA7HF,eA8IE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9IF,eA+IE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE,KAAK9B,sBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,eASE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF,CADF,CA/IF,eA8JE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9JF,EA+JG,KAAKnC,KAAL,CAAWoC,eAAX,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gCAAjB;AAAkD,QAAA,UAAU,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAGE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,eAIE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKpC,KAAL,CAAWsC,WAAX,CAAuB3B,GAAvB,CAA2B,UAACsD,MAAD,EAAY;AACtC,4BACE;AAAI,UAAA,GAAG,EAAEA,MAAM,CAAC,UAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAM,CAAC,UAAD,CAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAM,CAAC,YAAD,CAAX,QAA6BA,MAAM,CAAC,eAAD,CAAnC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAM,CAAC,aAAD,CAAX,QAA8BA,MAAM,CAAC,gBAAD,CAApC,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAM,CAAC,OAAD,CAAX,CAJF,CADF;AAQD,OATA,CADH,CATF,CADF,CADA,eA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BA,CADC,GA6BA,EA5LH,eA6LE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADN,CA7LF,eAgME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAC,yBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAOE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,WAAW,EAAC,SAHd;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,EAAE,EAAC,0BALL;AAME,QAAA,KAAK,EAAE,KAAKjE,KAAL,CAAW6B,OANpB;AAOE,QAAA,QAAQ,EAAE,kBAACqD,EAAD,EAAQ;AAChB,UAAA,MAAI,CAAC7D,mBAAL,CAAyB6D,EAAzB;AACD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWE;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAXF,EAYGL,WAZH,CAPF,CADF,CADJ,eAyBI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAC,uBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,WAAW,EAAC,QAHd;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,EAAE,EAAC,uBALL;AAME,QAAA,KAAK,EAAI,KAAK7E,KAAL,CAAWmB,IANtB;AAOE,QAAA,QAAQ,EAAE,kBAAC+D,EAAD,EAAQ;AAChB,UAAA,MAAI,CAACpE,gBAAL,CAAsBoE,EAAtB;AACD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWE;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXF,EAYGJ,YAZH,CAPF,CADF,CAzBJ,eAiDI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAC,0BAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE,oBAAC,KAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAGE,QAAA,EAAE,EAAC,0BAHL;AAIE,QAAA,WAAW,EAAC,oBAJd;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAE,KAAK9E,KAAL,CAAWoB,WANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CAjDJ,CAhMF,eAuQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE;AACV2D,UAAAA,WAAW,EAAE;AADH,SADd;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,SAAS,EAAE,mBAAChG,KAAD,EAAQoG,WAAR,EAAqBC,YAArB,EAAsC;AAC/C,cAAIC,OAAO,GAAGtG,KAAK,CAACuG,SAApB;;AACA,cACE,MAAI,CAACtF,KAAL,CAAWC,SAAX,IACA,MAAI,CAACD,KAAL,CAAWE,OADX,IAEA,MAAI,CAACF,KAAL,CAAWC,SAAX,CAAqBsF,EAArB,GAA0B,EAA1B,KACEJ,WAAW,CAACI,EAAZ,GAAiB,EAJrB,EAKE;AACAF,YAAAA,OAAO,IAAI,aAAX;AACD,WAPD,MAOO,IACL,MAAI,CAACrF,KAAL,CAAWC,SAAX,IACA,MAAI,CAACD,KAAL,CAAWE,OADX,IAEA,IAAIE,IAAJ,CAAS,MAAI,CAACJ,KAAL,CAAWC,SAAX,CAAqBsF,EAArB,GAA0B,EAAnC,IACE,IAAInF,IAAJ,CAAS+E,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CAHF,IAIA,IAAInF,IAAJ,CAAS,MAAI,CAACJ,KAAL,CAAWE,OAAX,CAAmBqF,EAAnB,GAAwB,EAAjC,IACE,IAAInF,IAAJ,CAAS+E,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CANG,EAOL;AACAF,YAAAA,OAAO,IAAI,cAAX;AACD,WATM,MASA,IACL,MAAI,CAACrF,KAAL,CAAWE,OAAX,IACA,MAAI,CAACF,KAAL,CAAWE,OAAX,CAAmBqF,EAAnB,GAAwB,EAAxB,KACEJ,WAAW,CAACI,EAAZ,GAAiB,EAHd,EAIL;AACAF,YAAAA,OAAO,IAAI,WAAX;AACD;;AACD,8BACE,4CAAQtG,KAAR;AAAe,YAAA,SAAS,EAAEsG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGF,WAAW,CAACxF,IAAZ,EADH,CADF;AAKD,SAnCH;AAoCE,QAAA,QAAQ,EAAE,kBAACqF,CAAD;AAAA,iBAAO,MAAI,CAAC9F,QAAL,CAAc;AAAEe,YAAAA,SAAS,EAAE+E;AAAb,WAAd,CAAP;AAAA,SApCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAJF,CAFF,CADJ,eAsDI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,eAME,oBAAC,aAAD;AACE,QAAA,UAAU,EAAE;AACVD,UAAAA,WAAW,EAAE;AADH,SADd;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,SAAS,EAAE,mBAAChG,KAAD,EAAQoG,WAAR,EAAqBC,YAArB,EAAsC;AAC/C,cAAIC,OAAO,GAAGtG,KAAK,CAACuG,SAApB;;AACA,cACE,MAAI,CAACtF,KAAL,CAAWC,SAAX,IACA,MAAI,CAACD,KAAL,CAAWE,OADX,IAEA,MAAI,CAACF,KAAL,CAAWC,SAAX,CAAqBsF,EAArB,GAA0B,EAA1B,KACEJ,WAAW,CAACI,EAAZ,GAAiB,EAJrB,EAKE;AACAF,YAAAA,OAAO,IAAI,aAAX;AACD,WAPD,MAOO,IACL,MAAI,CAACrF,KAAL,CAAWC,SAAX,IACA,MAAI,CAACD,KAAL,CAAWE,OADX,IAEA,IAAIE,IAAJ,CAAS,MAAI,CAACJ,KAAL,CAAWC,SAAX,CAAqBsF,EAArB,GAA0B,EAAnC,IACE,IAAInF,IAAJ,CAAS+E,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CAHF,IAIA,IAAInF,IAAJ,CAAS,MAAI,CAACJ,KAAL,CAAWE,OAAX,CAAmBqF,EAAnB,GAAwB,EAAjC,IACE,IAAInF,IAAJ,CAAS+E,WAAW,CAACI,EAAZ,GAAiB,EAA1B,CANG,EAOL;AACAF,YAAAA,OAAO,IAAI,cAAX;AACD,WATM,MASA,IACL,MAAI,CAACrF,KAAL,CAAWE,OAAX,IACA,MAAI,CAACF,KAAL,CAAWE,OAAX,CAAmBqF,EAAnB,GAAwB,EAAxB,KACEJ,WAAW,CAACI,EAAZ,GAAiB,EAHd,EAIL;AACAF,YAAAA,OAAO,IAAI,WAAX;AACD;;AACD,8BACE,4CAAQtG,KAAR;AAAe,YAAA,SAAS,EAAEsG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGF,WAAW,CAACxF,IAAZ,EADH,CADF;AAKD,SAnCH;AAoCE,QAAA,QAAQ,EAAE,kBAACqF,CAAD;AAAA,iBAAO,MAAI,CAAC9F,QAAL,CAAc;AAAEgB,YAAAA,OAAO,EAAC8E;AAAV,WAAd,CAAP;AAAA,SApCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAJF,CADF,CAtDJ,eA0GI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAE,KAAKjF,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANF,eASE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CAFF,CA1GJ,CAvQF,eAiYE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE6E,KAAX;AAAkB,QAAA,OAAO,EAAE/H,aAAa,CAACa,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ,CADN,CAjYF,CADF,CADF,CARF,CADF,CAFF,CAFF,CADF;AAkaD;;;;EAnvB8BzC,KAAK,CAACuK,S;;AAqvBvC,eAAe1G,kBAAf","sourcesContent":["import React from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDatetime from \"react-datetime\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Table,\r\n} from \"reactstrap\";\r\n// core components\r\n\r\nimport {\r\n  chartOptions,\r\n  parseOptions,\r\n  chartExample1,\r\n  chartExample3,\r\n} from \"variables/charts.js\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport APISimulation from \"./../../apis/APISimulation\";\r\nimport APIIncident from \"../../apis/APIIncident.js\";\r\nimport APIAirport from \"./../../apis/APIAirport.js\";\r\nimport APICountry from \"./../../apis/APICountry.js\";\r\nimport APICity from \"./../../apis/APICity.js\";\r\nconst serviceIncident = new APIIncident();\r\nconst serviceTimeline = new APISimulation();\r\nconst serviceCountry = new APICountry();\r\nconst serviceCity = new APICity();\r\nconst serviceAirport = new APIAirport();\r\n\r\n\r\nlet chartExample2 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            callback: function (value) {\r\n              if (!(value % 10)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n              }\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n          content += yLabel;\r\n          return content;\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nclass ShippingMonitoring extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataChart1: [],\r\n      labelsChart1: [],\r\n      legendChart1: [],\r\n      legendTimeLine: [],\r\n      dataChart2: [],\r\n      labelsChart2: [],\r\n      legendChart2: [],\r\n      queryDate: null,\r\n      labelsTimeLine: [],\r\n      dataTimeLine: [],\r\n      maxTimeLine: [],\r\n      queryTimeline: false,\r\n      dataChart4:[],\r\n      labelsChart4:[],\r\n      moreInfoWarehouses: false,\r\n      moreInfoFlights: false,\r\n      infoWarehouses: [],\r\n      infoFlights: [],\r\n      country: 0,\r\n      countries: [],\r\n      city:0,\r\n      cities:[],\r\n      airportName: \"Aeropuerto\",\r\n      airportId: 0,\r\n      startDate: null,\r\n      endDate: null,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangeCountry = this.handleChangeCountry.bind(this);\r\n    this.handleChangeCity = this.handleChangeCity.bind(this); \r\n    this.moreInformationWarehouse = this.moreInformationWarehouse.bind(this);\r\n    this.moreInformationFlights = this.moreInformationFlights.bind(this);\r\n    this.queryTimelineMoment = this.queryTimelineMoment.bind(this);\r\n    this.simulatebyAirport = this.simulatebyAirport.bind(this);\r\n\r\n\r\n    if (window.Chart) {\r\n      parseOptions(Chart, chartOptions());\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  transformDate = (dateToTransform)=>{\r\n    let year = dateToTransform.getFullYear();\r\n    let month = dateToTransform.getMonth();\r\n    if (month < 10) {\r\n        month = \"0\" + (month + 1);\r\n    }      \r\n    let date = dateToTransform.getDate();\r\n      if (date < 10) {\r\n        date = \"0\" + date;\r\n      }\r\n    let dateSend = year.toString() + month.toString() + date.toString();\r\n    return(dateSend);\r\n  }\r\n  simulatebyAirport = async ()=>{\r\n    if (this.state.startDate!=null && this.state.endDate!=null && this.state.airportId!=0){\r\n      let startDate=new Date(this.state.startDate), endDate= new Date(this.state.endDate);\r\n      let startDateT=this.transformDate(startDate);\r\n      let endDateT=this.transformDate(endDate);      \r\n      const result = await serviceTimeline.getInformationAirport(this.state.airportId,startDateT,endDateT, false);\r\n      if (result[\"estado\"].length<3){\r\n        let labelsChart4=[],dataChart4=[];\r\n        result[\"resultado\"].map((day)=>{\r\n          labelsChart4.push(day[\"ldate\"]);\r\n          dataChart4.push(day[\"count\"]);\r\n        })\r\n        this.setState({\r\n          labelsChart4: labelsChart4,\r\n          dataChart4:dataChart4,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  handleChangeCity = async (event) => {\r\n    let valueCity = event.target.value;\r\n    if (event.target.value != 0) {\r\n      const airportResponse = await serviceAirport.queryAirportByIdCity(\r\n        event.target.value\r\n      );\r\n      let airport = airportResponse[\"resultado\"];\r\n      this.setState(\r\n        {\r\n          city: valueCity,\r\n          airportId: airport[\"id\"],\r\n          airportName: airport[\"description\"],\r\n        },);\r\n    } \r\n    else {\r\n      this.setState(\r\n        {\r\n          city: 0,\r\n          airportId: 0,\r\n          airportName: \"Aeropuerto\",\r\n        },);\r\n    }\r\n  };\r\n\r\n  handleChangeCountry = async (event) => {\r\n    let idCountry = event.target.value;\r\n    if (idCountry != 0) {\r\n      let idCity = sessionStorage.getItem(\"idCityAirport\");\r\n      const citiesA = await serviceCity.queryCitiesByIdCountry(\r\n        idCountry, idCity\r\n      );\r\n      let cities = [];\r\n      if (citiesA[\"estado\"].length<3){\r\n        cities.push(citiesA[\"resultado\"]);\r\n      }\r\n      this.setState({\r\n        country: idCountry,\r\n        cities: cities });\r\n      \r\n    } \r\n    else {\r\n      this.setState({\r\n        city: 0,\r\n        airportId: 0,\r\n        airportName: \"Aeropuerto\",\r\n        country: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  moreInformationWarehouse = async()=>{\r\n    if(!this.state.moreInfoWarehouses){\r\n      const resultIncident = await serviceIncident.getDataAirports(false);\r\n      if (resultIncident[\"estado\"].length<3){\r\n        this.setState({\r\n          infoWarehouses:resultIncident[\"resultado\"],\r\n          moreInfoWarehouses: true,\r\n        })\r\n      }   \r\n    }\r\n    else{\r\n      this.setState({\r\n        moreInfoWarehouses: false,\r\n      })\r\n    }\r\n\r\n  }\r\n  moreInformationFlights = async()=>{\r\n    if (!this.state.moreInfoFlights){\r\n      const resultIncident = await serviceIncident.getDataFlights(false);\r\n      if (resultIncident[\"estado\"].length<3){\r\n        this.setState({\r\n          infoFlights:resultIncident[\"resultado\"],\r\n          moreInfoFlights: true,\r\n        })\r\n      }\r\n    }\r\n    else{\r\n      this.setState({\r\n        moreInfoFlights: false,\r\n      })\r\n    }\r\n  }\r\n  queryTimelineMoment = async () => {\r\n    if (this.state.queryDate != null) {\r\n      let year = this.state.queryDate.getFullYear();\r\n      let month = this.state.queryDate.getMonth();\r\n      if (month < 10) {\r\n        month = \"0\" + (month + 1);\r\n      }\r\n      //console.log(month);\r\n\r\n      console.log(this.state.queryDate.getDate());\r\n      let date = this.state.queryDate.getDate();\r\n      if (date < 10) {\r\n        date = \"0\" + date;\r\n      }\r\n\r\n      //console.log(this.state.queryDate.getHours());\r\n      let hours = this.state.queryDate.getHours();\r\n      if (hours < 10) {\r\n        hours = \"0\" + hours;\r\n      }\r\n      //console.log(hours);\r\n\r\n      //console.log(this.state.queryDate.getMinutes());\r\n      let min = this.state.queryDate.getMinutes();\r\n      if (min < 10) {\r\n        min = \"0\" + min;\r\n      }\r\n      let dateSend = year.toString() + month.toString() + date.toString();\r\n      let hourSend = hours.toString() + \":\" + min.toString();\r\n      //console.log(typeof dateSend);\r\n\r\n      const resultTimeline = await serviceTimeline.getTimeline(\r\n        dateSend,\r\n        hourSend,\r\n        false\r\n      );\r\n      //console.log(resultTimeline[\"resultado\"]);\r\n      let dataChart1 = [],\r\n        labelsChart1 = [],\r\n        legendChart1 =[];\r\n      if (resultTimeline[\"estado\"].length < 3) {\r\n        resultTimeline[\"resultado\"].map((airport) => {\r\n          dataChart1.push(airport[\"percentage\"]);\r\n          labelsChart1.push(airport[\"code\"]);\r\n          legendChart1.push([airport[\"code\"],airport[\"city\"],airport[\"country\"]]);\r\n        });\r\n        //console.log(dataChart1);\r\n        //console.log(labelsChart1);\r\n        this.setState({\r\n          dataTimeLine: dataChart1,\r\n          labelsTimeLine: labelsChart1,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          dataTimeLine: [0, 0, 0, 0, 0],\r\n          labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n          legendTimeLine:[[\"A1\",\"C1\",\"P1\"],[\"A2\",\"C2\",\"P2\"],[\"A3\",\"C3\",\"P3\"],[\"A4\",\"C4\",\"P4\"],[\"A5\",\"C5\",\"P5\"]],\r\n        });\r\n      }\r\n      this.setState({ queryTimeline: true });\r\n    }\r\n  };\r\n\r\n  componentWillMount = async () => {\r\n    const resultIncident = await serviceIncident.getDashboards(false);\r\n    const resultCountries = await serviceCountry.queryAllCountries();\r\n    if (resultCountries[\"estado\"].length<3){\r\n      this.setState({countries:resultCountries[\"resultado\"]})\r\n    }\r\n    let dataChart1 = [],\r\n      labelsChart1 = [],\r\n      legendChart1 = [],\r\n      dataChart2 = [],\r\n      labelsChart2 = [],\r\n      legendChart2 = [];\r\n    if (resultIncident[\"estado\"].length < 3) {\r\n      resultIncident[\"resultado\"][\"byairports\"].map((airport) => {\r\n        dataChart1.push(airport[\"count\"]);\r\n        labelsChart1.push(airport[\"code\"]);\r\n        legendChart1.push([airport[\"code\"],airport[\"city\"],airport[\"country\"]]);\r\n      });\r\n      resultIncident[\"resultado\"][\"byflightplans\"].map((flight) => {\r\n        dataChart2.push(flight[\"count\"]);\r\n        labelsChart2.push(flight[\"idFlight\"]);\r\n        legendChart2.push([flight[\"idFlight\"],flight[\"cityOrigin\"],flight[\"countryOrigin\"],flight[\"cityDestiny\"],flight[\"countryDestiny\"]]);\r\n      });\r\n      \r\n      this.setState({\r\n        dataChart1: dataChart1,\r\n        labelsChart1: labelsChart1,\r\n        legendChart1: legendChart1,\r\n        dataChart2: dataChart2,\r\n        labelsChart2: labelsChart2,\r\n        legendChart2: legendChart2,\r\n      });\r\n    } else {\r\n      //si hay error porque no hay data\r\n      this.setState({\r\n        dataChart1: [0, 0, 0, 0, 0],\r\n        labelsChart1: [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\"],\r\n        legendChart1:[[\"A1\",\"C1\",\"P1\"],[\"A2\",\"C2\",\"P2\"],[\"A3\",\"C3\",\"P3\"],[\"A4\",\"C4\",\"P4\"],[\"A5\",\"C5\",\"P5\"]],\r\n        dataChart2:[0,0,0,0,0],\r\n        labelsChart2:[\"V1\",\"V2\",\"V3\",\"V4\",\"V5\"],\r\n        legendChart2:[[\"V1\",\"OC1\",\"OP1\",\"DC1\",\"DP1\"],[\"V2\",\"OC2\",\"OP2\",\"DC2\",\"DP2\"],[\"V3\",\"OC3\",\"OP3\",\"DC3\",\"DP3\"],[\"V4\",\"OC4\",\"OP4\",\"DC4\",\"DP4\"],[\"V5\",\"OC5\",\"OP5\",\"DC5\",\"DP5\"]],\r\n        \r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    for (let i = 0; i < this.state.dataTimeLine.length; i++) {\r\n      this.state.maxTimeLine.push(100);\r\n    };\r\n    let mixedChart = {\r\n      labels: this.state.labelsTimeLine,\r\n      datasets: [\r\n        {\r\n          label: \"% Ocupado: \",\r\n          data: this.state.dataTimeLine,\r\n        },\r\n        {\r\n          label: \"% Máximo: \",\r\n          data: this.state.maxTimeLine,\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n    let data1 = {\r\n      labels: this.state.labelsChart1,\r\n      datasets: [\r\n        {\r\n          label:  \"# Incidencias\",\r\n          data: this.state.dataChart1,\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n    let data2 = {\r\n      labels: this.state.labelsChart2,\r\n      datasets: [\r\n        {\r\n          label:  \"# Incidencias\",\r\n          data: this.state.dataChart2,\r\n          maxBarThickness: 10,\r\n        },\r\n      ],\r\n    };\r\n    let data4={\r\n      labels: this.state.labelsChart4,\r\n        datasets: [\r\n          {\r\n            label: \"# Incidencias\",\r\n            data:this.state.dataChart4,\r\n            maxBarThickness: 10,\r\n          },\r\n        ],\r\n\r\n  };\r\n    let countries = this.state.countries, optionItems = [], optionCities = [];\r\n    if (countries.length > 0) {\r\n      optionItems = countries.map((country) => (\r\n        <option value={country[\"id\"]}>{country[\"name\"]}</option>\r\n      ));\r\n    }\r\n    if (this.state.cities.length > 0) {\r\n      optionCities = this.state.cities.map((city) => (\r\n        <option value={city[\"id\"]}>{city[\"name\"]}</option>\r\n      ));\r\n    }\r\n    \r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          {/* Form */}\r\n          <Row>\r\n            <Card className=\"bg-secondary shadow\" style={{ width: \"80rem\" }}>\r\n              <CardHeader className=\"bg-white border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <Col xs=\"10\" className=\"col-sm\">\r\n                    <h3 className=\"mb-0\">Simulación</h3>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <div className=\"pl-lg-4\">                    \r\n                    <br />                   \r\n                    {this.state.queryTimeline && (\r\n                      <Row>\r\n                        <Col lg=\"9\">\r\n                          <div className=\"chart\">\r\n                            <Bar\r\n                              data={mixedChart}\r\n                              options={chartExample2.options}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                        <Col lg=\"3\">\r\n                          <ListGroup>\r\n                            <ListGroupItemHeading>Aeropuertos</ListGroupItemHeading>\r\n                                    {this.state.legendTimeLine.map((airport)=>{\r\n                                        return(\r\n                                        <ListGroupItem>{airport[0]}: {airport[1]}, {airport[2]}</ListGroupItem>\r\n                                        )\r\n                            })}\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    )}\r\n                    <Row>\r\n                      <FormGroup style={{ width: \"30%\" }}>\r\n                        <label className=\"form-control-label\">Fecha</label>\r\n                        <InputGroup className=\"input-group-alternative\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-calendar-grid-58\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <ReactDatetime\r\n                            inputProps={{\r\n                              placeholder: \"Seleccionar fecha\",\r\n                            }}\r\n                            timeFormat={true}\r\n                            onChange={(e) => {\r\n                              this.setState({ queryDate: new Date(e) });\r\n                            }}\r\n                          />\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <Button\r\n                              className=\"btn-icon btn-2\"\r\n                              color=\"primary\"\r\n                              outline\r\n                              type=\"button\"\r\n                              onClick={this.queryTimelineMoment}\r\n                            >\r\n                              <span className=\"btn-inner--icon\">\r\n                                <i className=\"ni ni-zoom-split-in\" />\r\n                              </span>\r\n                            </Button>\r\n                          </InputGroupAddon>\r\n                        </InputGroup>\r\n                      </FormGroup>\r\n                    </Row>\r\n                    <Row>\r\n                      <h3>TOP 5 Almacenes ocupados</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Bar data={data1} options={chartExample3.options} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          <ListGroupItemHeading>Aeropuertos</ListGroupItemHeading>\r\n                          {this.state.legendChart1.map((airport)=>{\r\n                            return(\r\n                              <ListGroupItem>{airport[0]}: {airport[1]}, {airport[2]}</ListGroupItem>\r\n                            )\r\n                          })}\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                      <Col className=\"text-right\">\r\n                        <Button\r\n                          className=\"btn-icon btn-3\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={this.moreInformationWarehouse}\r\n                        >\r\n                          <span className=\"btn-inner--icon\">\r\n                            <i className=\"fas fa-eye\"></i>\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">Ver más</span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    {this.state.moreInfoWarehouses?\r\n                    <div>\r\n                    <Row>\r\n                      <Table className=\"align-items-center table-flush\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                          <tr>\r\n                            <th scope=\"col\">Código Aeropuerto</th>\r\n                            <th scope=\"col\">Ciudad, País</th>\r\n                            <th scope=\"col\">Número incidencias</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {this.state.infoWarehouses.map((warehouse) => {\r\n                            return (\r\n                              <tr key={warehouse[\"code\"]}>\r\n                                <th>{warehouse[\"code\"]}</th>\r\n                                <td>{warehouse[\"city\"]}, {warehouse[\"country\"]}</td>                              \r\n                                <td>{warehouse[\"count\"]}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                    </Row>\r\n                    <br/>\r\n                    </div>\r\n                      :\"\"}\r\n                    <Row>\r\n                      <h3>TOP 5 Vuelos ocupados</h3>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"9\">\r\n                        <div className=\"chart\">\r\n                          <Bar data={data2} options={chartExample3.options} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col lg=\"3\">\r\n                        <ListGroup>\r\n                          <ListGroupItemHeading>Vuelos</ListGroupItemHeading>\r\n                          {this.state.legendChart2.map((flight) => {\r\n                            return(\r\n                              <ListGroupItem>{flight[0]}: {flight[1]}, {flight[2]} - {flight[3]}, {flight[4]}</ListGroupItem>\r\n                              )\r\n                          })}\r\n                        </ListGroup>\r\n                      </Col>\r\n                    </Row>  \r\n                    <br/>\r\n                    <Row>\r\n                      <Col className=\"text-right\">\r\n                        <Button\r\n                          className=\"btn-icon btn-3\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={this.moreInformationFlights}\r\n                        >\r\n                          <span className=\"btn-inner--icon\">\r\n                            <i className=\"fas fa-eye\"></i>\r\n                          </span>\r\n                          <span className=\"btn-inner--text\">Ver más</span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    {this.state.moreInfoFlights?\r\n                    <div>\r\n                    <Row>\r\n                      <Table className=\"align-items-center table-flush\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                          <tr>\r\n                            <th scope=\"col\">Código Vuelo</th>                          \r\n                            <th scope=\"col\">Ciudad, País Origen</th>\r\n                            <th scope=\"col\">Ciudad, País Destino</th>\r\n                            <th scope=\"col\">Número incidencias</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {this.state.infoFlights.map((flight) => {\r\n                            return (\r\n                              <tr key={flight[\"idFlight\"]}>\r\n                                <th>{flight[\"idFlight\"]}</th>\r\n                                <td>{flight[\"cityOrigin\"]}, {flight[\"countryOrigin\"]}</td>\r\n                                <td>{flight[\"cityDestiny\"]}, {flight[\"countryDestiny\"]}</td>\r\n                                <td>{flight[\"count\"]}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n\r\n                    </Row>\r\n                    <br/>\r\n                    </div>\r\n                    :\"\"}                  \r\n                    <Row>\r\n                          <h3>Días de incidencias por aeropuerto</h3>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-destinatioCountry\"\r\n                            >\r\n                              País \r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              type=\"select\"\r\n                              placeholder=\"País\"\r\n                              name=\"select\"\r\n                              id=\"input-destinationCountry\"\r\n                              value={this.state.country}\r\n                              onChange={(ev) => {\r\n                                this.handleChangeCountry(ev);\r\n                              }}\r\n                            >\r\n                              <option value={0}>Selecciona un país</option>\r\n                              {optionItems}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-destinationCity\"\r\n                            >\r\n                              Ciudad \r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              type=\"select\"\r\n                              placeholder=\"Ciudad\"\r\n                              name=\"select\"\r\n                              id=\"input-destinationCity\"\r\n                              value = {this.state.city}\r\n                              onChange={(ev) => {\r\n                                this.handleChangeCity(ev);\r\n                              }}\r\n                            >\r\n                              <option value={0}>Seleccionar ciudad</option>\r\n                              {optionCities}\r\n                            </Input> \r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-destinationAirport\"\r\n                            >\r\n                              Aeropuerto\r\n                            </label>\r\n                            <Input\r\n                              disabled\r\n                              className=\"form-control-alternative\"                            \r\n                              id=\"input-destinationAirport\"\r\n                              placeholder=\"Aeropuerto destino\"\r\n                              type=\"text\"\r\n                              value={this.state.airportName}\r\n                            />\r\n                            \r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"4\">\r\n                          {/*filtrar por fechas*/}\r\n                          <FormGroup>\r\n                            <label className=\"form-control-label\">\r\n                              Fecha de inicio\r\n                            </label>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                <InputGroupText>\r\n                                  <i className=\"ni ni-calendar-grid-58\" />\r\n                                </InputGroupText>\r\n                              </InputGroupAddon>\r\n                              <ReactDatetime\r\n                                inputProps={{\r\n                                  placeholder: \"Seleccionar fecha\",\r\n                                }}\r\n                                timeFormat={false}\r\n                                renderDay={(props, currentDate, selectedDate) => {\r\n                                  let classes = props.className;\r\n                                  if (\r\n                                    this.state.startDate &&\r\n                                    this.state.endDate &&\r\n                                    this.state.startDate._d + \"\" ===\r\n                                      currentDate._d + \"\"\r\n                                  ) {\r\n                                    classes += \" start-date\";\r\n                                  } else if (\r\n                                    this.state.startDate &&\r\n                                    this.state.endDate &&\r\n                                    new Date(this.state.startDate._d + \"\") <\r\n                                      new Date(currentDate._d + \"\") &&\r\n                                    new Date(this.state.endDate._d + \"\") >\r\n                                      new Date(currentDate._d + \"\")\r\n                                  ) {\r\n                                    classes += \" middle-date\";\r\n                                  } else if (\r\n                                    this.state.endDate &&\r\n                                    this.state.endDate._d + \"\" ===\r\n                                      currentDate._d + \"\"\r\n                                  ) {\r\n                                    classes += \" end-date\";\r\n                                  }\r\n                                  return (\r\n                                    <td {...props} className={classes}>\r\n                                      {currentDate.date()}\r\n                                    </td>\r\n                                  );\r\n                                }}\r\n                                onChange={(e) => this.setState({ startDate: e })}\r\n                              />\r\n                            </InputGroup>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label className=\"form-control-label\">\r\n                              Fecha de fin\r\n                            </label>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                <InputGroupText>\r\n                                  <i className=\"ni ni-calendar-grid-58\" />\r\n                                </InputGroupText>\r\n                              </InputGroupAddon>\r\n                              <ReactDatetime\r\n                                inputProps={{\r\n                                  placeholder: \"Seleccionar fecha\",\r\n                                }}\r\n                                timeFormat={false}\r\n                                renderDay={(props, currentDate, selectedDate) => {\r\n                                  let classes = props.className;\r\n                                  if (\r\n                                    this.state.startDate &&\r\n                                    this.state.endDate &&\r\n                                    this.state.startDate._d + \"\" ===\r\n                                      currentDate._d + \"\"\r\n                                  ) {\r\n                                    classes += \" start-date\";\r\n                                  } else if (\r\n                                    this.state.startDate &&\r\n                                    this.state.endDate &&\r\n                                    new Date(this.state.startDate._d + \"\") <\r\n                                      new Date(currentDate._d + \"\") &&\r\n                                    new Date(this.state.endDate._d + \"\") >\r\n                                      new Date(currentDate._d + \"\")\r\n                                  ) {\r\n                                    classes += \" middle-date\";\r\n                                  } else if (\r\n                                    this.state.endDate &&\r\n                                    this.state.endDate._d + \"\" ===\r\n                                      currentDate._d + \"\"\r\n                                  ) {\r\n                                    classes += \" end-date\";\r\n                                  }\r\n                                  return (\r\n                                    <td {...props} className={classes}>\r\n                                      {currentDate.date()}\r\n                                    </td>\r\n                                  );\r\n                                }}\r\n                                onChange={(e) => this.setState({ endDate:e})}\r\n                              />\r\n                            </InputGroup>\r\n                          </FormGroup>\r\n                        </Col>  \r\n                        <Col className=\"text-right\">  \r\n                          <br/>                \r\n                          <Button\r\n                            className=\"btn-icon btn-3\"\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={this.simulatebyAirport}\r\n                          >\r\n                            <span className=\"btn-inner--icon\">\r\n                                <i className=\"fas fa-play-circle\"></i>\r\n                            </span>\r\n                            <span className=\"btn-inner--text\">Simular</span>\r\n                            \r\n                          </Button>\r\n                        </Col>                  \r\n                    </Row>\r\n                    <Row>                        \r\n                          <Col lg=\"9\">\r\n                              <div className=\"chart\">\r\n                                <Bar data={data4} options={chartExample3.options} />  \r\n                              </div>\r\n                          </Col>\r\n                          \r\n                    </Row>\r\n                    \r\n                  </div>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ShippingMonitoring;\r\n"]},"metadata":{},"sourceType":"module"}